{"version":3,"file":"AuthorizationHandler.js","sourceRoot":"","sources":["../../Library/AuthorizationHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,mCAAsC;AAEtC,IAAM,2BAA2B,GAAG,qCAAqC,CAAC;AAE1E,IAAI,SAAc,CAAC;AACnB,IAAI,CAAC;IACH,SAAS,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;AACnD,CAAC;AAAC,OAAO,CAAC,EAAE,CAAC;IACX,OAAO,CAAC,IAAI,CAAC,0KAA0K,CAAC,CAAC;AAC3L,CAAC;AAED,SAAS,gBAAgB,CAAC,QAAyB;IACjD,OAAO,IAAI,CAAC;AACd,CAAC;AACD;IAIE,8BAAY,UAA2B,EAAE,WAAoB;QAC3D,IAAI,SAAS,EAAE,CAAC;YACd,IAAI,MAAM,GAAa,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC;YACnF,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,+BAA+B,CAAC,EAAE,UAAU,YAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;QAC7F,CAAC;IACH,CAAC;IAED;;MAEE;IACW,qDAAsB,GAAnC,UAAoC,cAA0D;;;;;;6BACxF,SAAS,EAAT,wBAAS;wBACP,cAAc,GAAG,eAAe,CAAC;wBACjC,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAC,EAAE,GAAG,EAAE,UAAU,EAAE,CAAC,CAAC;wBACvE,qBAAM,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,WAAW,EAAE,gBAAgB,CAAC,EAAA;;wBAAvE,SAAuE,CAAC;wBACxE,cAAc,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;;;;;;KAEpF;IACH,2BAAC;AAAD,CAAC,AAtBD,IAsBC;AAED,iBAAS,oBAAoB,CAAC","sourcesContent":["import http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport { TokenCredential } from \"@azure/core-auth\";\r\nimport { PipelineRequest, PipelineResponse, PipelinePolicy } from \"@azure/core-rest-pipeline\";\r\nimport Logging = require(\"./Logging\");\r\n\r\nconst applicationInsightsResource = \"https://monitor.azure.com//.default\";\r\n\r\nlet azureCore: any;\r\ntry {\r\n  azureCore = require(\"@azure/core-rest-pipeline\");\r\n} catch (e) {\r\n  Logging.warn(\"Cannot load @azure/core-auth package. This package is required for AAD token authentication. It's likely that your node.js version is not supported by the JS Azure SDK.\");\r\n}\r\n\r\nfunction emptySendRequest(_request: PipelineRequest): Promise<PipelineResponse> {\r\n  return null;\r\n}\r\nclass AuthorizationHandler {\r\n\r\n  private _azureTokenPolicy: PipelinePolicy;\r\n\r\n  constructor(credential: TokenCredential, aadAudience?: string) {\r\n    if (azureCore) {\r\n      let scopes: string[] = aadAudience ? [aadAudience] : [applicationInsightsResource];\r\n      this._azureTokenPolicy = azureCore.bearerTokenAuthenticationPolicy({ credential, scopes });\r\n    }\r\n  }\r\n\r\n  /**\r\n  * Applies the Bearer token to the request through the Authorization header.\r\n  */\r\n  public async addAuthorizationHeader(requestOptions: http.RequestOptions | https.RequestOptions): Promise<void> {\r\n    if (azureCore) {\r\n      let authHeaderName = \"authorization\";\r\n      let webResource = azureCore.createPipelineRequest({ url: \"https://\" });\r\n      await this._azureTokenPolicy.sendRequest(webResource, emptySendRequest);\r\n      requestOptions.headers[authHeaderName] = webResource.headers.get(authHeaderName);\r\n    }\r\n  }\r\n}\r\n\r\nexport = AuthorizationHandler;\r\n"]}