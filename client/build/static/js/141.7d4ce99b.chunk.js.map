{"version":3,"file":"static/js/141.7d4ce99b.chunk.js","mappings":"0KAEe,SAASA,IACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,KAC5BO,EAASC,IAAcR,EAAAA,EAAAA,UAAS,IAIjCS,EADS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC9BC,IAAI,SAuCzB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6FAA4FC,UACzGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,wBACnEZ,IAASU,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gCAA+BC,SAAEZ,IACzDE,IAAWQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,SAAEV,KAC9DW,EAAAA,EAAAA,MAAA,QAAMF,UAAU,YAAYG,SA3CbC,UAInB,GAHAC,EAAEC,iBACFhB,EAAS,IACTE,EAAW,IACNC,EAIL,GAAIX,EAASyB,OAAS,EACpBjB,EAAS,+CAGX,GAAIR,IAAaG,EAAjB,CAIAG,GAAW,GACX,IACE,MAAMoB,QAAYC,MAAM,2BAA4B,CAClDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAErB,QAAOX,eAE1BiC,QAAaP,EAAIQ,OACnBR,EAAIS,IACNzB,EAAW,kDACXT,EAAY,IACZG,EAAmB,KAEnBI,EAASyB,EAAK1B,OAAS,eAE3B,CAAE,MAAO6B,GACP5B,EAAS,eACX,CACAF,GAAW,EAnBX,MAFEE,EAAS,+BARTA,EAAS,6BAsC4CW,SAAA,EACjDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,kBAChEF,EAAAA,EAAAA,KAAA,SAAOoB,KAAK,WAAWC,MAAOtC,EAAUuC,SAAUhB,GAAKtB,EAAYsB,EAAEiB,OAAOF,OAAQpB,UAAU,2GAA2GuB,YAAY,eAAeC,UAAQ,QAE9OtB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+CAA8CC,SAAC,sBAChEF,EAAAA,EAAAA,KAAA,SAAOoB,KAAK,WAAWC,MAAOnC,EAAiBoC,SAAUhB,GAAKnB,EAAmBmB,EAAEiB,OAAOF,OAAQpB,UAAU,2GAA2GuB,YAAY,mBAAmBC,UAAQ,QAEhQzB,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAASnB,UAAU,uGAAuGyB,SAAUtC,EAAQc,SAAEd,EAAU,eAAiB,0BAKhM,C","sources":["pages/ResetPassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function ResetPassword() {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Get token from URL\r\n  const params = new URLSearchParams(window.location.search);\r\n  const token = params.get('token');\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (!token) {\r\n      setError('Invalid or missing token');\r\n      return;\r\n    }\r\n    if (password.length < 6) {\r\n      setError('Password must be at least 6 characters');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch('/api/auth/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token, password })\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setSuccess('Password reset successful! You can now log in.');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n      } else {\r\n        setError(data.error || 'Reset failed');\r\n      }\r\n    } catch (err) {\r\n      setError('Server error');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\r\n      <div className=\"bg-white rounded-xl shadow-lg p-8 w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold text-indigo-700 mb-6 text-center\">Reset your password</h2>\r\n        {error && <div className=\"mb-4 text-red-600 text-center\">{error}</div>}\r\n        {success && <div className=\"mb-4 text-green-600 text-center\">{success}</div>}\r\n        <form className=\"space-y-5\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">New Password</label>\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\" placeholder=\"New password\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confirm Password</label>\r\n            <input type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} className=\"w-full border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500\" placeholder=\"Confirm password\" required />\r\n          </div>\r\n          <button type=\"submit\" className=\"w-full bg-indigo-600 text-white font-bold py-2 px-4 rounded-lg shadow hover:bg-indigo-700 transition\" disabled={loading}>{loading ? 'Resetting...' : 'Reset Password'}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ResetPassword","password","setPassword","useState","confirmPassword","setConfirmPassword","loading","setLoading","error","setError","success","setSuccess","token","URLSearchParams","window","location","search","get","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","length","res","fetch","method","headers","body","JSON","stringify","data","json","ok","err","type","value","onChange","target","placeholder","required","disabled"],"sourceRoot":""}