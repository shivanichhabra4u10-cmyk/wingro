{"version":3,"file":"static/js/565.5ad9b93c.chunk.js","mappings":"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","sources":["components/SegmentButton.tsx","pages/GrowWithCommunity.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface SegmentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  active?: boolean;\r\n  children: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst SegmentButton: React.FC<SegmentButtonProps> = ({ active, children, className = '', ...props }) => {\r\n  return (\r\n    <button\r\n      className={`px-6 py-2 rounded-full font-semibold shadow transition-all text-lg\r\n        ${active ? 'bg-cyan-500 text-white' : 'bg-white text-blue-700 border border-blue-200 hover:bg-blue-50'}\r\n        ${className}`.trim()}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SegmentButton;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Button } from '../components/Button';\r\nimport SegmentButton from '../components/SegmentButton';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { community, CommunitySegment, CommunityPost, Comment } from '../services/api';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nexport interface NewPostData {\r\n  author: string;\r\n  role?: string;\r\n  question: string;\r\n  details?: string;\r\n  segmentId: string;\r\n  views: number;\r\n  likes: number;\r\n  bookmarks: number;\r\n  comments: number;\r\n  isAnonymous: boolean;\r\n}\r\n\r\n\r\nconst GrowWithCommunity: React.FC = () => {\r\n  // State declarations (move to top)\r\n  const [question, setQuestion] = useState<string>(() => localStorage.getItem('communityQuestionDraft') || '');\r\n  const [questionDetails, setQuestionDetails] = useState<string>(() => localStorage.getItem('communityQuestionDetailsDraft') || '');\r\n  // Save draft to localStorage on change\r\n  useEffect(() => {\r\n    localStorage.setItem('communityQuestionDraft', question);\r\n  }, [question]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('communityQuestionDetailsDraft', questionDetails);\r\n  }, [questionDetails]);\r\n  const [isAnonymous, setIsAnonymous] = useState<boolean>(false);\r\n  const [activeFilter, setActiveFilter] = useState<string>('most-viewed');\r\n  const [communitySegments, setCommunitySegments] = useState<CommunitySegment[]>([]);\r\n  const [feedPosts, setFeedPosts] = useState<CommunityPost[]>([]);\r\n  const [isLoading, setIsLoading] = useState({ segments: true, posts: true });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [activeSegmentName, setActiveSegmentName] = useState<string>('Career Plateau & Stagnation');\r\n  const [comments, setComments] = useState<{[key: string]: Comment[]}>({});\r\n  const [showComments, setShowComments] = useState<{[key: string]: boolean}>({});\r\n  const [newComment, setNewComment] = useState<{[key: string]: string}>({});\r\n  const [coachReplyMode, setCoachReplyMode] = useState<{[key: string]: boolean}>({});\r\n  const [coachAnswer, setCoachAnswer] = useState<{[key: string]: string}>({});\r\n  const [coachReflection, setCoachReflection] = useState<{[key: string]: string}>({});\r\n  const questionInputRef = useRef<HTMLTextAreaElement>(null);\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [pagination, setPagination] = useState({ page: 1, limit: 10, hasMore: true, loading: false });\r\n  const [expandedContent, setExpandedContent] = useState<{ type: 'question' | 'answer' | 'title', content: string } | null>(null);\r\n  const navigate = useNavigate();\r\n  const { user, loading: authLoading, isAdmin } = useAuth();\r\n\r\n  // Fetch posts for active segment and filter\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setIsLoading(prev => ({ ...prev, posts: true }));\r\n      try {\r\n        // You may need to adjust the API call below to match your backend\r\n        const posts = await community.getPosts({\r\n          segmentId: activeSegmentName,\r\n          sort: activeFilter,\r\n          search: searchTerm,\r\n          page: pagination.page,\r\n          limit: pagination.limit\r\n        });\r\n        setFeedPosts(posts);\r\n      } catch (err) {\r\n        toast.error('Failed to load posts.');\r\n      } finally {\r\n        setIsLoading(prev => ({ ...prev, posts: false }));\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [activeSegmentName, activeFilter, searchTerm, pagination.page]);\r\n\r\n  // Fetch community segments on mount\r\n  useEffect(() => {\r\n    const fetchSegments = async () => {\r\n      setIsLoading(prev => ({ ...prev, segments: true }));\r\n      try {\r\n        const segments = await community.getSegments();\r\n        setCommunitySegments(segments);\r\n      } catch (err) {\r\n        toast.error('Failed to load community segments.');\r\n      } finally {\r\n        setIsLoading(prev => ({ ...prev, segments: false }));\r\n      }\r\n    };\r\n    fetchSegments();\r\n  }, []);\r\n\r\n\r\n  // Handler to submit a question\r\n  const handleSubmitQuestion = async () => {\r\n    if (!question.trim()) return;\r\n    if (!user && !authLoading) {\r\n      toast.info('Please log in to post a question.');\r\n      navigate('/login', { state: { from: '/grow-with-community' } });\r\n      return;\r\n    }\r\n    setIsSubmitting(true);\r\n    try {\r\n      await community.createPost({\r\n        author: user?.name || 'Anonymous',\r\n        question: question.trim(),\r\n        details: questionDetails.trim(),\r\n        segmentId: activeSegmentName,\r\n        isAnonymous,\r\n        views: 0,\r\n        likes: 0,\r\n        bookmarks: 0,\r\n        comments: 0,\r\n        isActive: true,\r\n        isAnswered: false\r\n      });\r\n  setQuestion('');\r\n  setQuestionDetails('');\r\n  localStorage.removeItem('communityQuestionDraft');\r\n  localStorage.removeItem('communityQuestionDetailsDraft');\r\n      toast.success('Question posted successfully!');\r\n    } catch (err) {\r\n      toast.error('Failed to post question.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Handler to like a post\r\n  const handleLikePost = async (postId: string) => {\r\n    try {\r\n      const updatedPost = await community.likePost(postId);\r\n      setFeedPosts(prev => \r\n        prev.map(post => \r\n          post._id === postId ? { ...post, likes: updatedPost.likes } : post\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(`Error liking post ${postId}:`, err);\r\n    }\r\n  };\r\n\r\n  // Handler to bookmark a post\r\n  const handleBookmarkPost = async (postId: string) => {\r\n    try {\r\n      const updatedPost = await community.bookmarkPost(postId);\r\n      setFeedPosts(prev => \r\n        prev.map(post => \r\n          post._id === postId ? { ...post, bookmarks: updatedPost.bookmarks } : post\r\n        )\r\n      );\r\n    } catch (err) {\r\n      console.error(`Error bookmarking post ${postId}:`, err);\r\n    }\r\n  };\r\n\r\n  // Handler to toggle comments visibility\r\n  const toggleComments = async (postId: string) => {\r\n    if (showComments[postId]) {\r\n      setShowComments(prev => ({ ...prev, [postId]: false }));\r\n    } else {\r\n      if (!comments[postId]) {\r\n        // Implement loadComments or handle comments loading here\r\n      } else {\r\n        setShowComments(prev => ({ ...prev, [postId]: true }));\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handler to add a new comment\r\n  const handleAddComment = async (postId: string) => {\r\n    const commentText = newComment[postId];\r\n    if (!commentText || commentText.trim() === '') return;\r\n    if (!user && !authLoading) {\r\n      toast.info(\"Please log in to add comments.\");\r\n      navigate('/login', { state: { from: '/grow-with-community' } });\r\n      return;\r\n    }\r\n    try {\r\n      const comment = await community.addComment(postId, {\r\n        author: user?.name || 'Guest User',\r\n        content: commentText.trim(),\r\n        isAnonymous: false,\r\n        likes: 0,\r\n        isActive: true\r\n      });\r\n      setComments(prev => ({\r\n        ...prev,\r\n        [postId]: [...(prev[postId] || []), comment]\r\n      }));\r\n      setNewComment(prev => ({ ...prev, [postId]: '' }));\r\n      setFeedPosts(prev => \r\n        prev.map(post => \r\n          post._id === postId ? { ...post, comments: post.comments + 1 } : post\r\n        )\r\n      );\r\n      toast.success('Comment added successfully.');\r\n    } catch (err) {\r\n      console.error(`Error adding comment to post ${postId}:`, err);\r\n      toast.error('Failed to add comment. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handler for coach to answer a post\r\n  const handleCoachAnswer = async (postId: string) => {\r\n    if (!coachAnswer[postId] || coachAnswer[postId].trim() === '') return;\r\n    if (user?.role === 'user') {\r\n      toast.error(\"Only coaches and admins can provide official answers.\");\r\n      return;\r\n    }\r\n    try {\r\n      setIsSubmitting(true);\r\n      const updatedPost = await community.answerPost(postId, {\r\n        answer: coachAnswer[postId].trim(),\r\n        answeredBy: user?.name || 'Coach',\r\n        answererRole: user?.role || 'Coach',\r\n        answererCoachId: user?.id,\r\n        reflection: coachReflection[postId]?.trim()\r\n      });\r\n      setFeedPosts(prev => \r\n        prev.map(post => \r\n          post._id === postId ? { \r\n            ...post, \r\n            isAnswered: true,\r\n            answer: updatedPost.answer,\r\n            answeredBy: updatedPost.answeredBy,\r\n            answererRole: updatedPost.answererRole,\r\n            reflection: updatedPost.reflection\r\n          } : post\r\n        )\r\n      );\r\n      setCoachReplyMode(prev => ({ ...prev, [postId]: false }));\r\n      setCoachAnswer(prev => ({ ...prev, [postId]: '' }));\r\n      setCoachReflection(prev => ({ ...prev, [postId]: '' }));\r\n      toast.success('Your answer has been posted successfully!');\r\n    } catch (err) {\r\n      console.error(`Error answering post ${postId}:`, err);\r\n      toast.error('Failed to submit your answer. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Format comment date\r\n  const formatCommentDate = (dateString: string) => {\r\n    return formatDistanceToNow(new Date(dateString), { addSuffix: true });\r\n  };\r\n\r\n  // Load more posts when scrolling\r\n  const loadMorePosts = () => {\r\n    if (pagination.loading || !pagination.hasMore) return;\r\n    setPagination(prev => ({ \r\n      ...prev, \r\n      page: prev.page + 1,\r\n      loading: true \r\n    }));\r\n  };\r\n\r\n  // Handle search input\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value);\r\n    setPagination({\r\n      page: 1,\r\n      limit: 10,\r\n      hasMore: true,\r\n      loading: false\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col space-y-12 pb-16 min-h-screen bg-gray-50 relative overflow-hidden\">\r\n      {/* ...existing code... */}\r\n      {/* Header section with blue gradient background */}\r\n      <section className=\"relative rounded-xl overflow-hidden mb-8 shadow-lg\">\r\n        <div className=\"bg-gradient-to-r from-blue-900 to-indigo-800 p-8 md:p-12 text-white\">\r\n          <div className=\"relative z-10 max-w-3xl mx-auto text-center\">\r\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-cyan-400\">\r\n              WinGroX Community\r\n            </h1>\r\n            <h2 className=\"text-xl md:text-2xl font-semibold mb-5 text-blue-100\">\r\n              Connect, share insights, and grow with others on similar journeys\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* Segment filter row above all sections */}\r\n      <div className=\"w-full flex flex-col items-center py-8 bg-white rounded-2xl shadow-lg mx-auto mt-8\">\r\n        <div className=\"flex flex-row flex-wrap gap-4 justify-center w-full\">\r\n          {communitySegments.map((segment) => (\r\n            <SegmentButton\r\n              key={segment.id}\r\n              active={activeSegmentName === segment.id}\r\n              onClick={() => setActiveSegmentName(segment.id)}\r\n            >\r\n              {segment.name}\r\n            </SegmentButton>\r\n          ))}\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"md\"\r\n            className=\"ml-2\"\r\n            onClick={() => setActiveSegmentName('')}\r\n            disabled={activeSegmentName === ''}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/* Main grid and feed */}\r\n      <div className=\"p-4 w-full mx-auto\">\r\n        <main className=\"bg-gradient-to-b from-gray-50 to-blue-50 rounded-xl p-6 shadow-lg w-full\">\r\n          {/* Search and Filter Bar */}\r\n          <div className=\"flex flex-col md:flex-row items-center justify-between gap-4 mb-8 p-4 bg-white rounded-xl shadow\">\r\n            <div className=\"flex flex-row gap-2\">\r\n              <Button\r\n                variant={activeFilter === 'most-liked' ? 'primary' : 'secondary'}\r\n                size=\"sm\"\r\n                className={activeFilter === 'most-liked' ? 'border-cyan-500' : 'border-blue-200'}\r\n                onClick={() => setActiveFilter('most-liked')}\r\n              >\r\n                Most Liked\r\n              </Button>\r\n              <Button\r\n                variant={activeFilter === 'most-viewed' ? 'primary' : 'secondary'}\r\n                size=\"sm\"\r\n                className={activeFilter === 'most-viewed' ? 'border-cyan-500' : 'border-blue-200'}\r\n                onClick={() => setActiveFilter('most-viewed')}\r\n              >\r\n                Most Viewed\r\n              </Button>\r\n              <Button\r\n                variant={activeFilter === 'newest' ? 'primary' : 'secondary'}\r\n                size=\"sm\"\r\n                className={activeFilter === 'newest' ? 'border-cyan-500' : 'border-blue-200'}\r\n                onClick={() => setActiveFilter('newest')}\r\n              >\r\n                Newest\r\n              </Button>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"w-full md:w-64 px-4 py-2 rounded-full border border-blue-200 focus:outline-none focus:ring-2 focus:ring-cyan-400 text-base\"\r\n              placeholder=\"Search posts...\"\r\n              value={searchTerm}\r\n              onChange={e => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          {/* Ask Question Box */}\r\n          <div className=\"bg-white rounded-2xl p-8 mb-8 shadow-xl flex flex-col gap-6 w-full mx-auto\" style={{width: '100%', maxWidth: '100%', minWidth: '100%'}}>\r\n            <h3 className=\"font-extrabold text-2xl mb-2 text-blue-900\">Ask Your Question</h3>\r\n            <textarea \r\n              ref={questionInputRef}\r\n              className=\"w-full p-4 border border-gray-300 rounded-xl mb-4 min-h-[80px] text-lg focus:outline-none focus:ring-2 focus:ring-cyan-400\"\r\n              placeholder=\"What's your biggest challenge right now? Our coaches are here to help...\"\r\n              value={question}\r\n              onChange={e => setQuestion(e.target.value)}\r\n              disabled={isSubmitting}\r\n            ></textarea>\r\n            <textarea \r\n              className=\"w-full p-4 border border-gray-300 rounded-xl mb-4 text-lg focus:outline-none focus:ring-2 focus:ring-cyan-400\"\r\n              placeholder=\"Add more details to your question (optional)\"\r\n              value={questionDetails}\r\n              onChange={e => setQuestionDetails(e.target.value)}\r\n              disabled={isSubmitting}\r\n            ></textarea>\r\n            <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input \r\n                  type=\"checkbox\" \r\n                  id=\"askAnonymous\" \r\n                  checked={isAnonymous}\r\n                  onChange={() => setIsAnonymous(!isAnonymous)}\r\n                  className=\"h-5 w-5 accent-cyan-500\"\r\n                  disabled={isSubmitting}\r\n                />\r\n                <label htmlFor=\"askAnonymous\" className=\"text-base font-medium text-gray-700\">Ask anonymously</label>\r\n              </div>\r\n              <Button\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n                onClick={handleSubmitQuestion}\r\n                isLoading={isSubmitting}\r\n                disabled={isSubmitting || question.trim() === ''}\r\n                className=\"w-full sm:w-auto\"\r\n              >\r\n                Post Question\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {/* Feed Content - Q&A Posts */}\r\n          <div className=\"space-y-8\">\r\n            {isLoading.posts && pagination.page === 1 ? (\r\n              <div className=\"flex justify-center py-8\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600\"></div>\r\n              </div>\r\n            ) : feedPosts.length === 0 ? (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <p className=\"mb-4\">No posts in this segment yet.</p>\r\n                <p>Be the first to ask a question!</p>\r\n              </div>\r\n            ) : (\r\n              feedPosts.map((post) => (\r\n                <div key={post._id} className=\"border-b border-gray-200 pb-6 last:border-b-0\">\r\n                  <p className=\"font-bold text-lg text-blue-900 mb-2 break-words overflow-hidden max-h-16 relative w-full\" style={{ wordBreak: 'break-word', maxWidth: '100%' }}>\r\n                    {post.question && post.question.length > 120 ? (\r\n                      <span>\r\n                        {post.question.slice(0, 120)}...\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          className=\"ml-2\"\r\n                          onClick={() => setExpandedContent({ type: 'title', content: post.question ?? \"\" })}\r\n                        >Read More</Button>\r\n                      </span>\r\n                    ) : post.question}\r\n                  </p>\r\n                  <p className=\"text-gray-600 break-words overflow-hidden max-h-24 relative w-full\" style={{ wordBreak: 'break-word', maxWidth: '100%' }}>\r\n                    {post.details && post.details.length > 300 ? (\r\n                      <div>\r\n                        {post.details.slice(0, 300)}...\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          className=\"ml-2\"\r\n                          onClick={() => setExpandedContent({ type: 'question', content: post.details ?? \"\" })}\r\n                        >Read More</Button>\r\n                      </div>\r\n                    ) : post.details}\r\n                  </p>\r\n                  {post.answer && (\r\n                    <div className=\"bg-blue-50 p-4 rounded-lg my-3\">\r\n                      <div className=\"flex items-center gap-2 mb-3\">\r\n                        <div className=\"bg-blue-100 text-blue-800 font-bold h-8 w-8 rounded-full flex items-center justify-center text-sm\">\r\n                          {post.answeredBy?.charAt(0) || 'C'}\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"font-medium text-sm\">{post.answeredBy}</p>\r\n                          <p className=\"text-xs text-gray-500\">{post.answererRole}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"whitespace-pre-wrap text-gray-800 leading-relaxed break-words overflow-hidden max-h-32 relative w-full\" style={{ wordBreak: 'break-word', maxWidth: '100%' }}>\r\n                        {post.answer.length > 400 ? (\r\n                          <div>\r\n                            {post.answer.slice(0, 400)}...\r\n                            <Button\r\n                              variant=\"outline\"\r\n                              size=\"sm\"\r\n                              className=\"ml-2\"\r\n                              onClick={() => setExpandedContent({ type: 'answer', content: post.answer ?? \"\" })}\r\n                            >Read More</Button>\r\n                          </div>\r\n                        ) : post.answer}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {post.reflection && (\r\n                    <div className=\"bg-indigo-50 border-l-4 border-indigo-500 p-4 rounded-r my-4 italic\">\r\n                      <p className=\"text-sm text-gray-500 mb-1\">Key Reflection:</p>\r\n                      {post.reflection}\r\n                    </div>\r\n                  )}\r\n                  <div className=\"flex flex-wrap gap-4 mt-4 pt-4 border-t border-gray-100\">\r\n                    <Button variant=\"primary\" size=\"md\" className=\"flex items-center gap-2\" onClick={() => handleLikePost(post._id!)}>\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"></path>\r\n                      </svg>\r\n                      <span>{post.likes}</span>\r\n                    </Button>\r\n                    <Button variant=\"primary\" size=\"md\" className=\"flex items-center gap-2\" onClick={() => handleBookmarkPost(post._id!)}>\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\"></path>\r\n                      </svg>\r\n                      <span>{post.bookmarks}</span>\r\n                    </Button>\r\n                    <Button variant=\"primary\" size=\"md\" className=\"flex items-center gap-2\" onClick={() => toggleComments(post._id!)}>\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"></path>\r\n                      </svg>\r\n                      <span>{post.comments}</span>\r\n                    </Button>\r\n                    {user && !post.isAnswered && (\r\n                      <Button variant=\"primary\" size=\"lg\" className=\"flex items-center gap-2 ml-auto\" onClick={() => setCoachReplyMode((prev: any) => ({ ...prev, [post._id!]: !prev[post._id!] }))}>\r\n                        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\"></path>\r\n                        </svg>\r\n                        Coach Reply\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                  {coachReplyMode[post._id!] && (\r\n                    <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n                      <h4 className=\"font-medium mb-2\">Coach Answer</h4>\r\n                      <textarea\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg mb-3 min-h-[120px]\"\r\n                        placeholder=\"Provide your expert guidance and advice...\"\r\n                        value={coachAnswer[post._id!] || ''}\r\n                        onChange={(e) => setCoachAnswer((prev: any) => ({ ...prev, [post._id!]: e.target.value }))}\r\n                      ></textarea>\r\n                      <h4 className=\"font-medium mb-2\">Key Reflection (Optional)</h4>\r\n                      <textarea\r\n                        className=\"w-full p-3 border border-gray-300 rounded-lg mb-3\"\r\n                        placeholder=\"Add a key reflection or takeaway from this question...\"\r\n                        value={coachReflection[post._id!] || ''}\r\n                        onChange={(e) => setCoachReflection((prev: any) => ({ ...prev, [post._id!]: e.target.value }))}\r\n                      ></textarea>\r\n                      <div className=\"flex justify-end gap-3\">\r\n                        <Button variant=\"secondary\" size=\"lg\" onClick={() => setCoachReplyMode((prev: any) => ({ ...prev, [post._id!]: false }))}>\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          size=\"lg\"\r\n                          onClick={() => handleCoachAnswer(post._id!)}\r\n                          isLoading={isSubmitting}\r\n                          disabled={!coachAnswer[post._id!] || coachAnswer[post._id!].trim() === '' || isSubmitting}\r\n                        >\r\n                          Submit Answer\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {showComments[post._id!] && (\r\n                    <div className=\"mt-4 pl-4 border-l-2 border-gray-200\">\r\n                      <h4 className=\"font-medium mb-2\">Comments</h4>\r\n                      {comments[post._id!] && comments[post._id!].length > 0 ? (\r\n                        <div className=\"space-y-3 mb-4\">\r\n                          {comments[post._id!].map((comment: any) => (\r\n                            <div key={comment._id} className=\"bg-gradient-to-b from-white to-blue-50 p-3 rounded-lg\">\r\n                              <div className=\"flex justify-between items-center mb-1\">\r\n                                <div className=\"flex items-center\">\r\n                                  <span className=\"font-medium text-sm\">{comment.author}</span>\r\n                                </div>\r\n                                <span className=\"text-xs text-gray-500\">\r\n                                  {comment.createdAt && formatCommentDate(comment.createdAt)}\r\n                                </span>\r\n                              </div>\r\n                              <p className=\"text-gray-800 text-sm\">{comment.content}</p>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : (\r\n                        <p className=\"text-gray-500 text-sm mb-3\">No comments yet.</p>\r\n                      )}\r\n                      <div className=\"flex gap-2 mt-2\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"flex-1 border border-gray-300 rounded-lg p-2 text-sm\"\r\n                          placeholder={user ? \"Add a comment...\" : \"Log in to comment...\"}\r\n                          value={newComment[post._id!] || ''}\r\n                          onChange={(e) => setNewComment((prev: any) => ({ ...prev, [post._id!]: e.target.value }))}\r\n                          disabled={!user}\r\n                        />\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          size=\"lg\"\r\n                          onClick={() => handleAddComment(post._id!)}\r\n                          disabled={!user || !newComment[post._id!] || newComment[post._id!].trim() === ''}\r\n                        >\r\n                          Post\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </main>\r\n      </div>\r\n      {/* Expanded Content Modal for Read More */}\r\n      {expandedContent && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60\">\r\n          <div className=\"bg-white rounded-2xl shadow-2xl p-8 max-w-2xl w-full relative\">\r\n            <button\r\n              className=\"absolute top-4 right-4 text-gray-500 hover:text-gray-700 text-2xl font-bold\"\r\n              onClick={() => setExpandedContent(null)}\r\n              title=\"Close\"\r\n            >×</button>\r\n            <h2 className=\"font-bold text-2xl mb-4 text-blue-900\">\r\n              {expandedContent.type === 'title' && 'Full Question Title'}\r\n              {expandedContent.type === 'question' && 'Full Question Details'}\r\n              {expandedContent.type === 'answer' && 'Full Coach Answer'}\r\n            </h2>\r\n            <div className=\"whitespace-pre-wrap text-lg text-gray-800 break-words\">\r\n              {expandedContent.content}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default GrowWithCommunity;\r\n\r\n"],"names":["_ref","active","children","className","props","_jsx","trim","GrowWithCommunity","question","setQuestion","useState","localStorage","getItem","questionDetails","setQuestionDetails","useEffect","setItem","isAnonymous","setIsAnonymous","activeFilter","setActiveFilter","communitySegments","setCommunitySegments","feedPosts","setFeedPosts","isLoading","setIsLoading","segments","posts","isSubmitting","setIsSubmitting","activeSegmentName","setActiveSegmentName","comments","setComments","showComments","setShowComments","newComment","setNewComment","coachReplyMode","setCoachReplyMode","coachAnswer","setCoachAnswer","coachReflection","setCoachReflection","questionInputRef","useRef","searchTerm","setSearchTerm","pagination","setPagination","page","limit","hasMore","loading","expandedContent","setExpandedContent","navigate","useNavigate","user","authLoading","isAdmin","useAuth","async","prev","community","getPosts","segmentId","sort","search","err","toast","error","fetchPosts","getSegments","fetchSegments","_jsxs","map","segment","SegmentButton","id","onClick","name","Button","variant","size","disabled","type","placeholder","value","onChange","e","target","style","width","maxWidth","minWidth","ref","checked","htmlFor","info","state","from","createPost","author","details","views","likes","bookmarks","isActive","isAnswered","removeItem","success","length","post","_post$answeredBy","wordBreak","slice","_post$question","content","_post$details","answer","answeredBy","charAt","answererRole","_post$answer","reflection","updatedPost","likePost","postId","_id","console","handleLikePost","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","bookmarkPost","handleBookmarkPost","toggleComments","role","_coachReflection$post","answerPost","answererCoachId","handleCoachAnswer","comment","createdAt","dateString","formatDistanceToNow","Date","addSuffix","commentText","addComment","handleAddComment","title"],"sourceRoot":""}