{"version":3,"file":"static/js/255.a2906737.chunk.js","mappings":"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","sources":["services/storageService.ts","services/productFileService.ts","services/productsApiWithFiles.ts","services/supabaseStorage.ts","pages/Products.tsx"],"sourcesContent":["import { uploadFile, getPublicUrl } from './supabaseStorage';\r\nimport * as supabaseStorage from './supabaseStorage';\r\n\r\n// Singleton storageService to hold the current provider\r\nclass StorageServiceImpl implements StorageProvider {\r\n  provider: StorageProvider;\r\n\r\n  constructor(provider: StorageProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  setProvider(provider: StorageProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async uploadFile(file: File, path: string): Promise<any> {\r\n    return this.provider.uploadFile(file, path);\r\n  }\r\n\r\n  async getFileUrl(path: string): Promise<string> {\r\n    return this.provider.getFileUrl(path);\r\n  }\r\n\r\n  async listFiles(prefix: string): Promise<string[]> {\r\n    return this.provider.listFiles(prefix);\r\n  }\r\n}\r\n\r\n// Default to supabase as the initial provider\r\nconst supabaseProvider: StorageProvider = {\r\n  uploadFile: supabaseStorage.uploadFile,\r\n  getFileUrl: async (path: string) => supabaseStorage.getPublicUrl(path),\r\n  listFiles: async (prefix: string) => {\r\n    // Supabase Storage: list files with a prefix\r\n    const { data, error } = await supabaseStorage.supabase.storage\r\n      .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n      .list(prefix, { limit: 1000, offset: 0, sortBy: { column: 'name', order: 'asc' } });\r\n    if (error) throw error;\r\n    if (!data) return [];\r\n    // Flatten folders and files into a single array of paths\r\n    const flatten = (items: any[], currentPrefix: string): string[] => {\r\n      let files: string[] = [];\r\n      for (const item of items) {\r\n        if (item.id) {\r\n          // File\r\n          files.push(currentPrefix ? `${currentPrefix}/${item.name}` : item.name);\r\n        } else if (item.name && item.items) {\r\n          // Folder\r\n          files = files.concat(flatten(item.items, currentPrefix ? `${currentPrefix}/${item.name}` : item.name));\r\n        }\r\n      }\r\n      return files;\r\n    };\r\n    return flatten(data, prefix);\r\n  }\r\n};\r\n\r\nexport const storageService = new StorageServiceImpl(supabaseProvider);\r\n\r\n// StorageProvider interface for pluggable storage backends\r\nexport interface StorageProvider {\r\n  uploadFile(file: File, path: string): Promise<any>;\r\n  getFileUrl(path: string): Promise<string>;\r\n  listFiles(prefix: string): Promise<string[]>;\r\n}\r\n\r\nexport async function uploadAnyFile(file: File, path: string) {\r\n  return storageService.uploadFile(file, path);\r\n}\r\n\r\nexport async function getFileUrl(path: string) {\r\n  return storageService.getFileUrl(path);\r\n}\r\n","import { uploadAnyFile, getFileUrl } from './storageService';\r\n\r\n/**\r\n * Product File Types\r\n */\r\nexport enum ProductFileType {\r\n  PDF = 'pdf',\r\n  VIDEO = 'video',\r\n  PRESENTATION = 'presentation',\r\n  EXCEL = 'excel',\r\n  IMAGE = 'image',\r\n  OTHER = 'other'\r\n};\r\n\r\n/**\r\n * Interface for uploaded product files\r\n */\r\nexport interface ProductFile {\r\n  fileId: string;\r\n  originalName: string;\r\n  fileType: ProductFileType;\r\n  url: string;\r\n  size: number;\r\n  uploadDate: string;\r\n  metadata?: Record<string, any>;\r\n  thumbnailUrl?: string;\r\n}\r\n\r\nexport async function uploadProductFile(file: File, productId: string): Promise<ProductFile> {\r\n  const path = `products/${productId}/${file.name}`;\r\n  await uploadAnyFile(file, path);\r\n  const url = await getFileUrl(path);\r\n  return {\r\n    fileId: path,\r\n    originalName: file.name,\r\n    fileType: getFileType(file.name),\r\n    url,\r\n    size: file.size,\r\n    uploadDate: new Date().toISOString(),\r\n    metadata: {},\r\n    thumbnailUrl: undefined,\r\n  };\r\n}\r\n\r\n// Helper to guess file type from extension\r\nexport function getFileType(name: string): ProductFileType {\r\n  if (!name || typeof name !== 'string' || !name.includes('.')) {\r\n    return ProductFileType.OTHER;\r\n  }\r\n  const ext = name.split('.').pop()?.toLowerCase();\r\n  switch (ext) {\r\n    case 'pdf': return ProductFileType.PDF;\r\n    case 'mp4':\r\n    case 'mov':\r\n    case 'avi': return ProductFileType.VIDEO;\r\n    case 'ppt':\r\n    case 'pptx': return ProductFileType.PRESENTATION;\r\n    case 'xls':\r\n    case 'xlsx': return ProductFileType.EXCEL;\r\n    case 'jpg':\r\n    case 'jpeg':\r\n    case 'png':\r\n    case 'gif': return ProductFileType.IMAGE;\r\n    default: return ProductFileType.OTHER;\r\n  }\r\n}\r\n\r\nexport async function getProductFileUrl(productId: string, fileName: string): Promise<string> {\r\n  return await getFileUrl(`products/${productId}/${fileName}`);\r\n}\r\n\r\n// Stub for deleting a product file (Supabase: remove by path)\r\nexport async function deleteProductFile(fileId: string): Promise<void> {\r\n  // TODO: Implement actual deletion with Supabase Storage if needed\r\n  return;\r\n}\r\n\r\n  /**\r\n   * Upload a product file\r\n   */\r\n\r\n// All other product file operations (delete, list, etc.) can be implemented similarly using Supabase Storage if needed.\r\n","import { products } from './api';\r\nimport { ProductFile, ProductFileType, uploadProductFile } from './productFileService';\r\nimport axios from 'axios';\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Extended API for products with file management\r\nexport const productsApiWithFiles = {\r\n  // Core product APIs (same as before)\r\n  getAll: async (params?: { \r\n    productType?: string; \r\n    page?: number; \r\n    limit?: number; \r\n    sortBy?: string; \r\n    sortOrder?: number; \r\n    search?: string; \r\n    category?: string; \r\n    fileType?: string; \r\n    minPrice?: number; \r\n    maxPrice?: number \r\n  }) => {\r\n    try {\r\n      const response = await products.getAll(params);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getById: async (id: string) => {\r\n    try {\r\n      const response = await products.getById(id);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Enhanced product creation with files\r\n  create: async (productData: any, files?: File[]) => {\r\n    try {\r\n      // First create the product to get an ID\r\n      const response = await products.create(productData);\r\n      console.log('Product create API response:', response);\r\n      // Defensive: support both response.data.data and response.data\r\n      const productDataObj = response.data?.data || response.data;\r\n      if (!productDataObj || !productDataObj._id) {\r\n        throw new Error('Product creation response missing _id. Full response: ' + JSON.stringify(response));\r\n      }\r\n      const productId = productDataObj._id;\r\n\r\n      // If we have files, upload them and update the product\r\n      if (files && files.length > 0) {\r\n        try {\r\n          const productFiles = await uploadProductFiles(files, productId);\r\n          // Update the product with file information\r\n          const updatedProduct = {\r\n            ...productDataObj,\r\n            files: productFiles,\r\n            hasFiles: true,\r\n          };\r\n          // Update the product\r\n          const updateResponse = await products.update(productId, updatedProduct);\r\n          console.log('Product update with files response:', updateResponse);\r\n          if (!updateResponse.data || !Array.isArray(updateResponse.data.files) || updateResponse.data.files.length === 0) {\r\n            throw new Error('Product update succeeded but files array is missing or empty.');\r\n          }\r\n          return updateResponse.data;\r\n        } catch (fileUpdateError) {\r\n          console.error('Error updating product with files:', fileUpdateError);\r\n          throw fileUpdateError;\r\n        }\r\n      } else {\r\n        // If no files, ensure files is at least an empty array\r\n        if (!productDataObj.files) {\r\n          const updateResponse = await products.update(productId, { ...productDataObj, files: [] });\r\n          return updateResponse.data;\r\n        }\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating product:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Enhanced product update with files\r\n  update: async (id: string, productData: any, files?: File[], filesToDelete?: string[]) => {\r\n    try {\r\n      console.log('[productsApiWithFiles.update] START', { id, productData, files, filesToDelete });\r\n      // Handle file deletions if any\r\n      if (filesToDelete && filesToDelete.length > 0) {\r\n        await Promise.all(filesToDelete.map(filePath => {\r\n          // TODO: Implement deleteProductFile as a named export if needed\r\n          // productFileService.deleteProductFile(filePath)\r\n          // For now, skip or implement delete logic here\r\n          // Example: await deleteProductFile(filePath);\r\n          // (deleteProductFile not implemented in productFileService)\r\n          return Promise.resolve();\r\n        }));\r\n      }\r\n\r\n      // Upload new files if any\r\n      let productFiles: ProductFile[] = [];\r\n      if (files && files.length > 0) {\r\n        productFiles = await uploadProductFiles(files, id);\r\n        // Merge with existing files\r\n        const existingFiles = productData.files || [];\r\n        productData.files = [...existingFiles, ...productFiles];\r\n        productData.hasFiles = true;\r\n      } else {\r\n        // If no new files, preserve existing files if present\r\n        if (!productData.files) {\r\n          // Fetch the current product to get its files\r\n          const current = await products.getById(id);\r\n          productData.files = current.data?.files || [];\r\n        }\r\n      }\r\n\r\n      console.log('[productsApiWithFiles.update] before API call', { id, productData });\r\n      // Update the product\r\n      const response = await products.update(id, productData);\r\n      console.log('[productsApiWithFiles.update] after API call', { response });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error updating product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  delete: async (id: string) => {\r\n    try {\r\n      // Get the product to find associated files\r\n      const productResponse = await api.get(`/api/products/${id}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      // Delete associated files if any\r\n      if (product.files && Array.isArray(product.files) && product.files.length > 0) {\r\n        await Promise.all(product.files.map((file: ProductFile) => {\r\n          // TODO: Implement deleteProductFile as a named export if needed\r\n          // productFileService.deleteProductFile(file.fileId)\r\n          // For now, skip or implement delete logic here\r\n          // Example: await deleteProductFile(file.fileId);\r\n          // (deleteProductFile not implemented in productFileService)\r\n          return Promise.resolve();\r\n        }));\r\n      }\r\n      \r\n      // Delete the product\r\n      const response = await api.delete(`/api/products/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // File-specific operations\r\n  uploadFile: async (productId: string, file: File, metadata?: Record<string, any>) => {\r\n    try {\r\n      const productFile = await uploadProductFile(file, productId);\r\n      \r\n      // Update the product record with the new file\r\n      const productResponse = await api.get(`/api/products/${productId}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      const files = product.files || [];\r\n      files.push(productFile);\r\n      \r\n      const updatedProduct = {\r\n        ...product,\r\n        files,\r\n        hasFiles: true,\r\n      };\r\n      \r\n      // Update the product\r\n      const updateResponse = await api.put(`/api/products/${productId}`, updatedProduct);\r\n      return {\r\n        file: productFile,\r\n        product: updateResponse.data.data\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error uploading file for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  deleteFile: async (productId: string, fileId: string) => {\r\n    try {\r\n      // Delete the actual file\r\n      // TODO: Implement deleteProductFile as a named export if needed\r\n      // await productFileService.deleteProductFile(fileId);\r\n      // For now, skip or implement delete logic here\r\n      // Example: await deleteProductFile(fileId);\r\n      // (deleteProductFile not implemented in productFileService)\r\n      \r\n      // Update the product record\r\n      const productResponse = await axios.get(`/api/products/${productId}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      // Remove the file from the product's files array\r\n      const updatedFiles = (product.files || []).filter(\r\n        (file: ProductFile) => file.fileId !== fileId\r\n      );\r\n      \r\n      const updatedProduct = {\r\n        ...product,\r\n        files: updatedFiles,\r\n        hasFiles: updatedFiles.length > 0,\r\n      };\r\n      \r\n      // Update the product\r\n      const updateResponse = await axios.put(`/api/products/${productId}`, updatedProduct);\r\n      return updateResponse.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting file ${fileId} for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get all files for a product\r\n  getFiles: async (productId: string) => {\r\n    try {\r\n      const response = await products.getById(productId);\r\n      return response.data.data.files || [];\r\n    } catch (error) {\r\n      console.error(`Error getting files for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Simulate product purchase (should call backend endpoint in real app)\r\n  purchase: async (productId: string) => {\r\n    // TODO: Replace with real purchase API call\r\n    // Example: await axios.post(`/api/products/${productId}/purchase`);\r\n    return Promise.resolve({ success: true });\r\n  },\r\n\r\n  // Get secure download URL for a file (should call backend endpoint in real app)\r\n  getDownloadUrl: async (productId: string, fileId: string) => {\r\n    // TODO: Replace with real API call to get signed URL\r\n    // Example: const res = await axios.get(`/api/products/${productId}/files/${fileId}/download-url`);\r\n    // return res.data.url;\r\n    return null;\r\n  }\r\n};\r\n\r\n// Helper function to upload multiple files for a product\r\nasync function uploadProductFiles(files: File[], productId: string): Promise<ProductFile[]> {\r\n  // Filter out files without a valid name and throw an error if any are invalid\r\n  const invalidFiles = files.filter(f => !f || !f.name || typeof f.name !== 'string' || f.name.trim() === '');\r\n  if (invalidFiles.length > 0) {\r\n    throw new Error('One or more files are missing a valid name. Please re-select your files and try again.');\r\n  }\r\n  const uploadPromises = files.map(file => uploadProductFile(file, productId));\r\n  return await Promise.all(uploadPromises);\r\n}\r\n\r\nexport default productsApiWithFiles;\r\n","import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL!;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY!;\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport async function uploadFile(file: File, path: string) {\r\n  const { data, error } = await supabase.storage\r\n    .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n    .upload(path, file, { upsert: true });\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport function getPublicUrl(path: string) {\r\n  return supabase.storage\r\n    .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n    .getPublicUrl(path).data.publicUrl;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { productsApiWithFiles } from '../services/productsApiWithFiles';\r\nimport { Product } from '../types/product';\r\n\r\nconst Products: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  // Filter states\r\n  const [search, setSearch] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [productType, setProductType] = useState('');\r\n  // Dynamically extract unique categories and product types from products\r\n  // Capitalize first letter utility\r\n  const capitalize = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\r\n  const uniqueCategories = Array.from(new Set(products.map(p => p.category).filter(Boolean)));\r\n  const uniqueProductTypes = Array.from(new Set(products.map(p => p.productType).filter(Boolean)));\r\n  const [minPrice, setMinPrice] = useState('');\r\n  const [maxPrice, setMaxPrice] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        const response = await productsApiWithFiles.getAll();\r\n        console.log('Products API response:', response);\r\n        if (Array.isArray(response)) {\r\n          setProducts(response);\r\n        } else if (Array.isArray(response.data)) {\r\n          setProducts(response.data);\r\n        } else if (response.products && Array.isArray(response.products)) {\r\n          setProducts(response.products);\r\n        } else {\r\n          setProducts([]);\r\n        }\r\n      } catch (err) {\r\n        console.error('Products API error:', err);\r\n        setError('Failed to fetch products');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-50 to-blue-100\">\r\n      <section className=\"bg-gradient-to-r from-blue-900 to-indigo-800 rounded-xl p-8 md:p-12 text-white relative overflow-hidden mb-8 shadow-lg\">\r\n        <div className=\"relative z-10 max-w-3xl mx-auto text-center\">\r\n          <h1 className=\"text-5xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-cyan-400 mb-4 tracking-tight\" style={{ fontFamily: 'Inter, sans-serif', letterSpacing: '-0.02em' }}>\r\n            Explore Our Products\r\n          </h1>\r\n          <p className=\"text-xl text-blue-100 mb-6\">\r\n            Discover innovative tools and resources designed to accelerate your growth journey.\r\n          </p>\r\n        </div>\r\n        <div className=\"absolute -top-24 -right-24 w-64 h-64 rounded-full bg-gradient-to-br from-blue-500/30 to-cyan-500/30 blur-3xl\"></div>\r\n        <div className=\"absolute -bottom-16 -left-16 w-48 h-48 rounded-full bg-gradient-to-tr from-indigo-500/20 to-purple-500/20 blur-3xl\"></div>\r\n      </section>\r\n      <div className=\"container mx-auto px-4 pb-16\">\r\n        {/* Filters Section */}\r\n        <div className=\"bg-white rounded-xl shadow p-6 mb-8 flex flex-col md:flex-row md:items-end gap-4\">\r\n          <div className=\"flex-1 flex flex-col md:flex-row gap-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search products...\"\r\n              value={search}\r\n              onChange={e => setSearch(e.target.value)}\r\n              className=\"border border-gray-300 rounded-lg px-4 py-2 w-full md:w-64 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n            />\r\n            <select\r\n              value={category}\r\n              onChange={e => setCategory(e.target.value)}\r\n              className=\"border border-gray-300 rounded-lg px-4 py-2 w-full md:w-48 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n            >\r\n              <option value=\"\">All Categories</option>\r\n              {uniqueCategories.map(cat => (\r\n                <option key={cat} value={cat}>{capitalize(cat)}</option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              value={productType}\r\n              onChange={e => setProductType(e.target.value)}\r\n              className=\"border border-gray-300 rounded-lg px-4 py-2 w-full md:w-48 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n            >\r\n              <option value=\"\">All Types</option>\r\n              {uniqueProductTypes.map(type => (\r\n                <option key={type} value={type}>{capitalize(type)}</option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Min Price\"\r\n              value={minPrice}\r\n              onChange={e => setMinPrice(e.target.value)}\r\n              className=\"border border-gray-300 rounded-lg px-4 py-2 w-full md:w-32 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n              min={0}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Max Price\"\r\n              value={maxPrice}\r\n              onChange={e => setMaxPrice(e.target.value)}\r\n              className=\"border border-gray-300 rounded-lg px-4 py-2 w-full md:w-32 focus:outline-none focus:ring-2 focus:ring-blue-400\"\r\n              min={0}\r\n            />\r\n          </div>\r\n        </div>\r\n        {loading ? (\r\n          <div className=\"text-center py-12 text-xl text-blue-700\">Loading products...</div>\r\n        ) : error ? (\r\n          <div className=\"text-center py-12 text-xl text-red-600\">{error}</div>\r\n        ) : products.length === 0 ? (\r\n          <div className=\"text-center py-12 text-xl text-gray-500\">No products available at the moment.</div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\r\n            {products\r\n              .filter(product => {\r\n                // Search filter\r\n                if (search && !product.name.toLowerCase().includes(search.toLowerCase())) return false;\r\n                // Category filter (admin-aligned)\r\n                if (category && product.category !== category) return false;\r\n                // Product type filter (admin-aligned)\r\n                if (productType && product.productType !== productType) return false;\r\n                // Min price filter\r\n                if (minPrice && product.price < Number(minPrice)) return false;\r\n                // Max price filter\r\n                if (maxPrice && product.price > Number(maxPrice)) return false;\r\n                return true;\r\n              })\r\n              .map((product) => {\r\n              const hasDiscount = typeof product.oldPrice === 'number' && product.oldPrice > product.price;\r\n              const discount = hasDiscount && product.oldPrice ? Math.round(100 * (product.oldPrice - product.price) / product.oldPrice) : 0;\r\n              // Placeholder image if not present\r\n              const imageUrl = product.images && product.images.length > 0 ? product.images[0] : 'https://via.placeholder.com/300x200?text=Product';\r\n              // Placeholder rating/review (since not in Product type)\r\n              const rating = 4.3;\r\n              const reviewCount = Math.floor(Math.random() * 200 + 20);\r\n              return (\r\n                <div\r\n                  key={product._id}\r\n                  className=\"bg-white rounded-xl shadow border border-gray-200 flex flex-col transition-transform hover:-translate-y-1 hover:shadow-xl hover:border-blue-300 overflow-hidden\"\r\n                >\r\n                  <div className=\"relative w-full aspect-[4/3] bg-gray-100\">\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt={product.name}\r\n                      className=\"object-cover w-full h-full rounded-t-xl\"\r\n                    />\r\n                    <button className=\"absolute top-2 right-2 bg-white/80 rounded-full p-2 shadow hover:bg-pink-100 transition\" title=\"Wishlist\">\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6 text-pink-500\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.54 0-2.877.792-3.562 2.008C11.565 4.542 10.228 3.75 8.688 3.75 6.099 3.75 4 5.765 4 8.25c0 7.22 8 11.25 8 11.25s8-4.03 8-11.25z\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"p-4 flex flex-col flex-1\">\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <span className=\"text-sm font-semibold text-gray-900 truncate\">{product.name}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <span className=\"text-xs text-gray-500 truncate\">{product.category || product.productType || 'Product'}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 mb-3\">\r\n                      <span className=\"text-base font-bold text-gray-900\">Rs. {product.price.toLocaleString()}</span>\r\n                      {hasDiscount && product.oldPrice && (\r\n                        <span className=\"text-gray-400 line-through text-sm\">Rs. {product.oldPrice.toLocaleString()}</span>\r\n                      )}\r\n                      {hasDiscount && (\r\n                        <span className=\"text-xs font-semibold text-green-700 bg-green-100 rounded px-2 py-0.5\">{discount}% OFF</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      <span className=\"text-xs font-semibold text-white bg-blue-600 rounded px-2 py-0.5\">{rating.toFixed(1)} ★</span>\r\n                      <span className=\"text-xs text-gray-500\">{reviewCount}</span>\r\n                    </div>\r\n                    <div className=\"mt-auto flex flex-col items-center w-full\">\r\n                      <a\r\n                        href={product._id || product.id ? `/product/${product._id || product.id}` : '#'}\r\n                        className=\"w-full px-4 py-2 rounded bg-blue-500 text-white font-semibold shadow hover:bg-blue-600 transition text-center\"\r\n                        onClick={e => { if (!(product._id || product.id)) { e.preventDefault(); alert('Product ID missing.'); } }}\r\n                      >Download</a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["supabaseProvider","uploadFile","supabaseStorage","getFileUrl","async","path","listFiles","data","error","storage","from","process","list","prefix","limit","offset","sortBy","column","order","flatten","items","currentPrefix","files","item","id","push","name","concat","storageService","constructor","provider","this","setProvider","file","ProductFileType","uploadProductFile","productId","uploadAnyFile","url","fileId","originalName","fileType","getFileType","size","uploadDate","Date","toISOString","metadata","thumbnailUrl","undefined","_name$split$pop","includes","OTHER","split","pop","toLowerCase","PDF","VIDEO","PRESENTATION","EXCEL","IMAGE","api","axios","create","baseURL","headers","productsApiWithFiles","getAll","products","params","console","getById","productData","_response$data","response","log","productDataObj","_id","Error","JSON","stringify","length","productFiles","uploadProductFiles","updatedProduct","hasFiles","updateResponse","update","Array","isArray","fileUpdateError","filesToDelete","Promise","all","map","filePath","resolve","existingFiles","_current$data","current","delete","product","get","productFile","put","deleteFile","updatedFiles","filter","getFiles","purchase","success","getDownloadUrl","f","trim","uploadPromises","supabase","createClient","upload","upsert","getPublicUrl","publicUrl","Products","setProducts","useState","loading","setLoading","setError","search","setSearch","category","setCategory","productType","setProductType","capitalize","str","charAt","toUpperCase","slice","uniqueCategories","Set","p","Boolean","uniqueProductTypes","minPrice","setMinPrice","maxPrice","setMaxPrice","useEffect","err","fetchProducts","_jsxs","className","children","_jsx","style","fontFamily","letterSpacing","type","placeholder","value","onChange","e","target","cat","min","price","Number","hasDiscount","oldPrice","discount","Math","round","imageUrl","images","reviewCount","floor","random","src","alt","title","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","toLocaleString","toFixed","href","onClick","preventDefault","alert"],"sourceRoot":""}