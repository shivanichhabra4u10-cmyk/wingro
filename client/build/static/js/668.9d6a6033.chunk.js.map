{"version":3,"file":"static/js/668.9d6a6033.chunk.js","mappings":"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","sources":["pages/OrganizationAssessment.tsx"],"sourcesContent":["\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Chart as ChartJS, RadialLinearScale, LinearScale, CategoryScale, BarElement, PointElement, LineElement, ArcElement, Filler, Tooltip, Legend } from 'chart.js';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport RiskNavigatorGauge from '../components/RiskNavigatorGauge';\r\nimport StrengthsCard from '../components/StrengthsCard';\r\nimport DevelopmentCard from '../components/DevelopmentCard';\r\nimport TieredPlans from '../components/TieredPlans';\r\nimport earlyStartupQuestions from '../data/early-startup-questions.json';\r\nimport establishedStartupQuestions from '../data/established-startup-questions.json';\r\n\r\n// For PDF export\r\nimport html2pdf from 'html2pdf.js';\r\n\r\nChartJS.register(RadialLinearScale, CategoryScale, LinearScale, BarElement, PointElement, LineElement, ArcElement, Filler, Tooltip, Legend);\r\n\r\ninterface Option {\r\n  option?: string;\r\n  text: string;\r\n  score?: number;\r\n}\r\ninterface Question {\r\n  id: number;\r\n  category: string;\r\n  question: string;\r\n  options: Option[];\r\n}\r\ninterface OrganizationData {\r\n  companyName: string;\r\n  contactName: string;\r\n  contactEmail: string;\r\n  contactPhone: string;\r\n  industry: string;\r\n  companySize: string;\r\n  companyAge: string;\r\n  role: string;\r\n  organizationType?: string;\r\n  category?: string;\r\n  assessmentType?: string;\r\n  linkedinUrl?: string;\r\n}\r\n\r\nconst API_URL = process.env.NODE_ENV === 'production'\r\n  ? 'https://api.wingrox.com/api'\r\n  : 'http://localhost:3001/api';\r\n\r\nconst OrganizationAssessment: React.FC = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [assessmentType, setAssessmentType] = useState('');\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [answers, setAnswers] = useState<{ [key: number]: string }>({});\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showAssessment, setShowAssessment] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [showIntro, setShowIntro] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [organizationData, setOrganizationData] = useState<OrganizationData>({} as OrganizationData);\r\n  const [assessmentId, setAssessmentId] = useState<string | null>(null);\r\n\r\n  const companyAges = [\r\n    'Less than 1 year', '1-3 years', '4-7 years', '8-15 years', '16+ years'\r\n  ];\r\n  const roles = [\r\n    'Founder/CEO', 'COO/Operations', 'CFO/Finance', 'CTO/Technology', 'CMO/Marketing', 'HR/People', 'Other'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const typeParam = searchParams.get('type');\r\n    const category = localStorage.getItem('category') || '';\r\n    let type = '';\r\n    if (typeParam === 'early-startup' || category === 'organization-early-startup') {\r\n      type = 'organization-early-startup';\r\n    } else if (typeParam === 'established' || category === 'organization-established') {\r\n      type = 'organization-established';\r\n    } else {\r\n      navigate('/assessment-selection', { replace: true });\r\n      return;\r\n    }\r\n    setAssessmentType(type);\r\n    loadQuestions(type);\r\n    setIsLoading(false);\r\n  }, [location, navigate]);\r\n\r\n  const loadQuestions = (type: string) => {\r\n    let questionData: Question[] = [];\r\n    if (type === 'organization-early-startup') {\r\n      questionData = earlyStartupQuestions as unknown as Question[];\r\n    } else if (type === 'organization-established') {\r\n      questionData = establishedStartupQuestions as unknown as Question[];\r\n    }\r\n    setQuestions(questionData);\r\n  };\r\n\r\n  const handleSelectOption = (questionId: number, option: string) => {\r\n    setAnswers(prev => ({ ...prev, [questionId]: option }));\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    if (!answers[currentQuestion.id]) {\r\n      toast.warning('Please select an answer before proceeding.');\r\n      return;\r\n    }\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      handleSubmitAssessment();\r\n    }\r\n  };\r\n\r\n  const handlePreviousQuestion = () => {\r\n    if (currentQuestionIndex > 0) {\r\n      setCurrentQuestionIndex(prev => prev - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitAssessment = async () => {\r\n    setShowAssessment(false);\r\n    setShowResults(true);\r\n    window.scrollTo(0, 0);\r\n    setSubmitting(true);\r\n    setError(null);\r\n    const assessmentData = {\r\n      type: assessmentType,\r\n      organization: organizationData,\r\n      answers: Object.entries(answers).map(([questionId, option]) => ({\r\n        questionId: parseInt(questionId),\r\n        option\r\n      }))\r\n    };\r\n    try {\r\n      if (!assessmentId) {\r\n        setError('Assessment ID is missing. Please try starting the assessment again.');\r\n        toast.error('Assessment ID is missing.');\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n      await axios.put(`${API_URL}/assessment/organization/${assessmentId}`, { responseData: assessmentData });\r\n    } catch (err: any) {\r\n      setError('Failed to submit assessment. Please try again later.');\r\n      toast.error(err.response?.data?.message || 'Failed to submit assessment.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleStartAssessment = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    setError(null);\r\n    const formData = new FormData(e.currentTarget);\r\n    const orgData: OrganizationData = {\r\n      companyName: formData.get('companyName') as string,\r\n      contactName: formData.get('contactName') as string,\r\n      contactEmail: formData.get('contactEmail') as string,\r\n      contactPhone: formData.get('contactPhone') as string,\r\n      industry: formData.get('industry') as string,\r\n      companySize: formData.get('companySize') as string,\r\n      companyAge: formData.get('companyAge') as string,\r\n      role: formData.get('role') as string,\r\n      linkedinUrl: formData.get('linkedinUrl') as string || ''\r\n    };\r\n    setOrganizationData(orgData);\r\n    try {\r\n      const response = await axios.post(`${API_URL}/assessment/organization`, orgData);\r\n      if (response.data && response.data.success) {\r\n        if (response.data.data && response.data.data._id) {\r\n          setAssessmentId(response.data.data._id);\r\n        }\r\n        setShowIntro(false);\r\n        setShowAssessment(true);\r\n        setCurrentQuestionIndex(0);\r\n        toast.success('Organization info saved successfully!');\r\n      } else {\r\n        setError('Failed to create assessment. Please try again.');\r\n        toast.error('Failed to create assessment.');\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to create assessment. Please try again later.');\r\n      toast.error(err.response?.data?.message || 'Failed to create assessment.');\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const calculateCategoryScores = useCallback(() => {\r\n    const categoryScores: Record<string, number> = {};\r\n    const categoryCounts: Record<string, number> = {};\r\n    questions.forEach(question => {\r\n      const answer = answers[question.id];\r\n      if (!answer) return;\r\n      const mainCategory = question.category.split(':')[0].trim();\r\n      if (!categoryScores[mainCategory]) categoryScores[mainCategory] = 0;\r\n      if (!categoryCounts[mainCategory]) categoryCounts[mainCategory] = 0;\r\n      const optionIndex = 'abcdef'.indexOf(answer.toLowerCase());\r\n      if (optionIndex !== -1) {\r\n        categoryScores[mainCategory] += (5 - optionIndex);\r\n        categoryCounts[mainCategory] += 1;\r\n      }\r\n    });\r\n    return Object.entries(categoryScores).reduce((finalScores: Record<string, number>, [category, score]) => {\r\n      const maxPossible = categoryCounts[category] * 5;\r\n      finalScores[category] = Math.round((score / maxPossible) * 100);\r\n      return finalScores;\r\n    }, {});\r\n  }, [questions, answers]);\r\n\r\n  const calculateOverallScore = useCallback((categoryScores: Record<string, number>) => {\r\n    const categories = Object.values(categoryScores);\r\n    const totalScore = categories.reduce((sum, score) => sum + score, 0);\r\n    return categories.length ? Math.round(totalScore / categories.length) : 0;\r\n  }, []);\r\n\r\n  const renderLoadingState = () => (\r\n    <div className=\"flex items-center justify-center min-h-[300px]\">\r\n      <span className=\"text-blue-700 text-lg font-semibold\">Loading...</span>\r\n    </div>\r\n  );\r\n\r\n  const renderIntroSection = () => (\r\n  <form className=\"w-full max-w-none bg-white rounded-2xl shadow-sm p-8 md:p-12 mx-auto\" onSubmit={handleStartAssessment}>\r\n      <h2 className=\"text-2xl font-bold mb-6 text-gray-900 text-center\">Organization Information</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Company Name</label>\r\n          <input name=\"companyName\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Contact Name</label>\r\n          <input name=\"contactName\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Contact Email</label>\r\n          <input name=\"contactEmail\" type=\"email\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Contact Phone</label>\r\n          <input name=\"contactPhone\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Industry</label>\r\n          <input name=\"industry\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Company Size</label>\r\n          <input name=\"companySize\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Company Age</label>\r\n          <select name=\"companyAge\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\">\r\n            <option value=\"\">Select</option>\r\n            {companyAges.map(age => <option key={age} value={age}>{age}</option>)}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Role</label>\r\n          <select name=\"role\" required className=\"w-full border border-gray-300 rounded-lg px-4 py-2\">\r\n            <option value=\"\">Select</option>\r\n            {roles.map(role => <option key={role} value={role}>{role}</option>)}\r\n          </select>\r\n        </div>\r\n        <div className=\"md:col-span-2\">\r\n          <label className=\"block text-gray-700 font-medium mb-2\">LinkedIn URL (optional)</label>\r\n          <input name=\"linkedinUrl\" className=\"w-full border border-gray-300 rounded-lg px-4 py-2\" />\r\n        </div>\r\n      </div>\r\n      <button type=\"submit\" className=\"mt-8 w-full py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition\" disabled={submitting}>\r\n        {submitting ? 'Saving...' : 'Start Assessment'}\r\n      </button>\r\n      {error && <div className=\"text-red-600 mt-4 text-center\">{error}</div>}\r\n    </form>\r\n  );\r\n\r\n  const renderAssessmentSection = () => {\r\n    if (!questions.length) return null;\r\n    const question = questions[currentQuestionIndex];\r\n    // 2-column grid for options, full-width layout, match CareerAssessment look\r\n    return (\r\n      <div className=\"bg-white w-full max-w-none shadow-sm p-0 md:p-12 rounded-none\">\r\n        {/* Progress bar */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\r\n            <span>Question {currentQuestionIndex + 1} of {questions.length}</span>\r\n            <span>{Math.round(((currentQuestionIndex + 1) / questions.length) * 100)}% Complete</span>\r\n          </div>\r\n          <div className=\"w-full h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n            <div \r\n              className=\"h-full bg-blue-600 rounded-full\" \r\n              style={{ width: `${Math.round(((currentQuestionIndex + 1) / questions.length) * 100)}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        {/* Category */}\r\n        <div className=\"inline-block px-3 py-1 bg-blue-50 text-blue-700 rounded-full text-sm font-medium mb-4\">\r\n          {question.category}\r\n        </div>\r\n        {/* Question text */}\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-6\">\r\n          {question.question}\r\n        </h3>\r\n        {/* Options - 2 column layout */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\r\n          {question.options.map((opt, idx) => {\r\n            const optionLetter = opt.option || String.fromCharCode(97 + idx);\r\n            const isSelected = answers[question.id] === optionLetter;\r\n            return (\r\n              <div\r\n                key={optionLetter}\r\n                onClick={() => handleSelectOption(question.id, optionLetter)}\r\n                className={`p-4 border ${isSelected ? 'border-blue-500 bg-blue-50' : 'border-gray-200 hover:border-gray-300'} rounded-lg cursor-pointer transition-all h-full`}\r\n              >\r\n                <div className=\"flex items-start h-full\">\r\n                  <div className={`flex-shrink-0 w-6 h-6 rounded-full ${isSelected ? 'bg-blue-500' : 'bg-gray-200'} flex items-center justify-center mr-3 mt-0.5`}>\r\n                    <span className={`text-sm font-semibold ${isSelected ? 'text-white' : 'text-gray-600'}`}>{optionLetter.toUpperCase()}</span>\r\n                  </div>\r\n                  <span className=\"text-gray-800\">{opt.text}</span>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {/* Navigation buttons */}\r\n        <div className=\"flex justify-between pt-6 border-t border-gray-200\">\r\n          <button\r\n            onClick={handlePreviousQuestion}\r\n            disabled={currentQuestionIndex === 0}\r\n            className={`px-6 py-3 ${currentQuestionIndex === 0 ? 'bg-gray-300 cursor-not-allowed' : 'bg-gray-100 hover:bg-gray-200'} text-gray-700 font-medium rounded-md transition-colors`}\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            onClick={handleNextQuestion}\r\n            disabled={!answers[question.id]}\r\n            className={`px-6 py-3 ${!answers[question.id] ? 'bg-blue-300 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'} text-white font-medium rounded-md transition-colors`}\r\n          >\r\n            {currentQuestionIndex === questions.length - 1 ? 'Submit' : 'Next'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderResultsSection = () => {\r\n    // PDF download handler\r\n    const handleDownloadPDF = () => {\r\n      toast.dismiss(); // Close all toasts to prevent removalReason error\r\n      setTimeout(() => {\r\n        const element = document.getElementById('org-assessment-results');\r\n        if (element) {\r\n          html2pdf().from(element).set({\r\n            margin: [0.75, 0.5, 0.75, 0.5], // top, right, bottom, left (inches)\r\n            filename: 'organization-assessment-report.pdf',\r\n            html2canvas: { scale: 2, useCORS: true },\r\n            pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }\r\n          }).save();\r\n        }\r\n      }, 300); // Wait a moment for toasts to close\r\n    };\r\n    const categoryScores = calculateCategoryScores();\r\n    const overallScore = calculateOverallScore(categoryScores);\r\n    // Build concise label map for radar chart axes\r\n  const categoryLabelMap: Record<string, string> = {};\r\n    questions.forEach(q => {\r\n      if (q.category) {\r\n        const conciseLabel = q.category.includes(':') ? q.category.split(':')[0].trim() : q.category.trim();\r\n        categoryLabelMap[q.category] = conciseLabel;\r\n      }\r\n    });\r\n    // Sort scores by value\r\n    const sortedScores = Object.entries(categoryScores)\r\n      .map(([key, score]) => ({ key, score }))\r\n      .sort((a, b) => b.score - a.score);\r\n    // Top 3 strengths (highest scores)\r\n    const strengths = sortedScores.slice(0, 3);\r\n    // Top 3 opportunities (lowest scores)\r\n    const weaknesses = sortedScores.slice(-3).reverse();\r\n    // Radar chart: each axis is a concise label, value is the normalized score (0-100)\r\n    const radarData = {\r\n      labels: sortedScores.map(item => categoryLabelMap[item.key] || item.key),\r\n      datasets: [\r\n        {\r\n          label: 'Score',\r\n          data: sortedScores.map(item => item.score),\r\n          backgroundColor: 'rgba(37, 99, 235, 0.2)',\r\n          borderColor: 'rgba(37, 99, 235, 1)',\r\n          borderWidth: 2,\r\n          pointBackgroundColor: 'rgba(37, 99, 235, 1)'\r\n        }\r\n      ]\r\n    };\r\n    // Recommendations logic (simple placeholder, can be improved)\r\n    const generateRecommendations = () => {\r\n      const recommendations = [];\r\n      if (overallScore < 50) {\r\n        recommendations.push('Focus on strengthening foundational business operations and team alignment.');\r\n        recommendations.push('Consider external mentorship or consulting for rapid improvement.');\r\n      } else {\r\n        recommendations.push('Your organization shows strong potential. Explore growth and scaling opportunities.');\r\n        recommendations.push('Continue investing in your strengths and address any weak areas.');\r\n      }\r\n      weaknesses.forEach(({ key }) => {\r\n        recommendations.push(`Develop a focused improvement plan for ${categoryLabelMap[key] || key}.`);\r\n      });\r\n      return recommendations;\r\n    };\r\n    const recommendations = generateRecommendations();\r\n    const reportDate = new Date().toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n    return (\r\n  <div id=\"org-assessment-results\">\r\n        <div className=\"text-center mb-6\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Organization Health Score</h2>\r\n          <button\r\n            className=\"mt-4 px-6 py-2 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition\"\r\n            onClick={handleDownloadPDF}\r\n          >\r\n            Download PDF\r\n          </button>\r\n        </div>\r\n        <div className=\"mb-8\">\r\n          <RiskNavigatorGauge score={overallScore} maxScore={100} />\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-sm p-5 mb-8\">\r\n          <h3 className=\"text-lg font-bold text-gray-800 mb-3 flex items-center\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n            </svg>\r\n            Organization Dimensions Radar\r\n          </h3>\r\n          <div className=\"flex flex-col md:flex-row items-center gap-4\">\r\n            <div className=\"w-full md:w-[520px] mx-auto flex-shrink-0\">\r\n              <Radar\r\n                data={radarData}\r\n                options={{\r\n                  scales: {\r\n                    r: {\r\n                      beginAtZero: true,\r\n                      min: 0,\r\n                      max: 100,\r\n                      ticks: {\r\n                        stepSize: 20,\r\n                        backdropColor: 'transparent',\r\n                        display: true,\r\n                        font: { size: 12 }\r\n                      },\r\n                      pointLabels: {\r\n                        font: { size: 14 },\r\n                        padding: 10\r\n                      }\r\n                    }\r\n                  },\r\n                  plugins: {\r\n                    legend: { display: false }\r\n                  },\r\n                  maintainAspectRatio: false\r\n                }}\r\n                height={340}\r\n                width={520}\r\n              />\r\n            </div>\r\n            <div className=\"md:max-w-sm p-4 bg-blue-50 rounded-lg\">\r\n              <h4 className=\"font-medium text-blue-700 text-sm mb-2\">Understanding Your Score</h4>\r\n              <ul className=\"text-sm space-y-2\">\r\n                <li className=\"flex items-start\">\r\n                  <span className=\"inline-block w-3 h-3 bg-red-400 rounded-full mt-1 mr-2\"></span>\r\n                  <span><strong>0-40:</strong> High-risk areas needing immediate attention</span>\r\n                </li>\r\n                <li className=\"flex items-start\">\r\n                  <span className=\"inline-block w-3 h-3 bg-yellow-400 rounded-full mt-1 mr-2\"></span>\r\n                  <span><strong>41-70:</strong> Developing areas with improvement needed</span>\r\n                </li>\r\n                <li className=\"flex items-start\">\r\n                  <span className=\"inline-block w-3 h-3 bg-green-400 rounded-full mt-1 mr-2\"></span>\r\n                  <span><strong>71-100:</strong> Strength areas that give you competitive advantage</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-10\">\r\n          <div className=\"h-full\">\r\n            <StrengthsCard \r\n              strengths={strengths.map(item => ({\r\n                title: categoryLabelMap[item.key] || item.key,\r\n                description: `${item.score}% - ${item.score >= 80 ? 'Exceptional' : item.score >= 70 ? 'Strong' : 'Solid'} performance in this area gives your organization a competitive advantage.`,\r\n                icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" /></svg>'\r\n              }))}\r\n            />\r\n          </div>\r\n          <div className=\"h-full\">\r\n            <DevelopmentCard \r\n              opportunities={weaknesses.map(item => ({\r\n                title: categoryLabelMap[item.key] || item.key,\r\n                description: `${item.score}% - This area requires focused attention and strategic improvement to reduce organizational risk.`,\r\n                icon: '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" /></svg>'\r\n              }))}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-12 bg-white p-8 rounded-lg shadow-sm\">\r\n          <TieredPlans />\r\n        </div>\r\n        <div className=\"bg-white rounded-lg shadow-sm p-5 mb-8\">\r\n          <h3 className=\"text-lg font-bold text-gray-800 mb-4 flex items-center\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-indigo-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\r\n            </svg>\r\n            Strategic Recommendations\r\n          </h3>\r\n          <ul className=\"space-y-3 pl-2\">\r\n            {recommendations.map((recommendation, index) => (\r\n              <li key={`rec-${index}`} className=\"flex items-start\">\r\n                <span className=\"inline-block w-2 h-2 bg-indigo-500 rounded-full mt-2 mr-2\"></span>\r\n                <span className=\"text-gray-700\">{recommendation}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-10\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\r\n            <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Schedule a Business Consulting Session</h3>\r\n            <p className=\"text-gray-600 mb-4\">Get personalized guidance from our expert business consultants to accelerate your growth.</p>\r\n            <button\r\n              className=\"w-full py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition\"\r\n              onClick={() => navigate('/marketplace')}\r\n            >Book a Consultant</button>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow-sm\">\r\n            <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Access Premium Resources</h3>\r\n            <p className=\"text-gray-600 mb-4\">Unlock our library of curated business development tools, courses, and materials.</p>\r\n            <button\r\n              className=\"w-full py-3 bg-purple-600 hover:bg-purple-700 text-white font-medium rounded-lg transition\"\r\n              onClick={() => navigate('/products')}\r\n            >Explore Resources</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-gray-50 p-4 rounded-lg text-center mb-6\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            Assessment completed on {reportDate} • Reference ID: {assessmentId && typeof assessmentId === 'string' ? assessmentId.slice(-8).toUpperCase() : 'PENDING'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-blue-50 to-blue-100\">\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <section className=\"bg-gradient-to-r from-blue-900 to-indigo-800 rounded-xl p-8 md:p-12 text-white relative overflow-hidden mb-8 shadow-lg\">\r\n        <div className=\"relative z-10 max-w-3xl mx-auto text-center\">\r\n          <h1 className=\"text-5xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-cyan-400 mb-4 tracking-tight\" style={{ fontFamily: 'Inter, sans-serif', letterSpacing: '-0.02em' }}>\r\n            {assessmentType.includes('early-startup') \r\n              ? 'Early-Stage Startup Risk Assessment' \r\n              : 'Established Organization Risk Assessment'}\r\n          </h1>\r\n          <p className=\"text-xl text-blue-100 mb-6\">\r\n            Evaluate your organization's readiness and identify strategic growth opportunities\r\n          </p>\r\n        </div>\r\n        <div className=\"absolute -top-24 -right-24 w-64 h-64 rounded-full bg-gradient-to-br from-blue-500/30 to-cyan-500/30 blur-3xl\"></div>\r\n        <div className=\"absolute -bottom-16 -left-16 w-48 h-48 rounded-full bg-gradient-to-tr from-indigo-500/20 to-purple-500/20 blur-3xl\"></div>\r\n      </section>\r\n      {isLoading ? renderLoadingState() : (\r\n        <>\r\n          {showIntro && renderIntroSection()}\r\n          {showAssessment && renderAssessmentSection()}\r\n          {showResults && renderResultsSection()}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrganizationAssessment;\r\n"],"names":["ChartJS","register","RadialLinearScale","CategoryScale","LinearScale","BarElement","PointElement","LineElement","ArcElement","Filler","Tooltip","Legend","API_URL","OrganizationAssessment","location","useLocation","navigate","useNavigate","assessmentType","setAssessmentType","useState","questions","setQuestions","answers","setAnswers","currentQuestionIndex","setCurrentQuestionIndex","isLoading","setIsLoading","showAssessment","setShowAssessment","showResults","setShowResults","showIntro","setShowIntro","submitting","setSubmitting","error","setError","organizationData","setOrganizationData","assessmentId","setAssessmentId","companyAges","roles","useEffect","typeParam","URLSearchParams","search","get","category","localStorage","getItem","type","replace","loadQuestions","questionData","earlyStartupQuestions","establishedStartupQuestions","handleNextQuestion","currentQuestion","id","length","prev","handleSubmitAssessment","toast","warning","handlePreviousQuestion","async","window","scrollTo","assessmentData","organization","Object","entries","map","_ref","questionId","option","parseInt","axios","put","responseData","err","_err$response","_err$response$data","response","data","message","handleStartAssessment","e","preventDefault","formData","FormData","currentTarget","orgData","companyName","contactName","contactEmail","contactPhone","industry","companySize","companyAge","role","linkedinUrl","post","success","_id","_err$response2","_err$response2$data","_err$response3","_err$response3$data","calculateCategoryScores","useCallback","categoryScores","categoryCounts","forEach","question","answer","mainCategory","split","trim","optionIndex","indexOf","toLowerCase","reduce","finalScores","_ref2","score","maxPossible","Math","round","calculateOverallScore","categories","values","totalScore","sum","_jsxs","className","children","_jsx","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","style","fontFamily","letterSpacing","includes","_Fragment","onSubmit","name","required","value","age","disabled","renderAssessmentSection","width","options","opt","idx","optionLetter","String","fromCharCode","isSelected","onClick","handleSelectOption","toUpperCase","text","renderResultsSection","overallScore","categoryLabelMap","q","conciseLabel","sortedScores","_ref3","key","sort","a","b","strengths","slice","weaknesses","reverse","radarData","labels","item","datasets","label","backgroundColor","borderColor","borderWidth","pointBackgroundColor","recommendations","generateRecommendations","push","_ref4","reportDate","Date","toLocaleDateString","year","month","day","handleDownloadPDF","dismiss","setTimeout","element","document","getElementById","html2pdf","from","set","margin","filename","html2canvas","scale","useCORS","pagebreak","mode","save","RiskNavigatorGauge","maxScore","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Radar","scales","r","beginAtZero","min","max","ticks","stepSize","backdropColor","display","font","size","pointLabels","padding","plugins","legend","maintainAspectRatio","height","StrengthsCard","title","description","icon","DevelopmentCard","opportunities","TieredPlans","recommendation","index"],"sourceRoot":""}