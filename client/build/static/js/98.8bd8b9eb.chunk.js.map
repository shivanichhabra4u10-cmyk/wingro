{"version":3,"file":"static/js/98.8bd8b9eb.chunk.js","mappings":"yKAqBA,MAAMA,EAAgB,CACpB,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,SAAUC,MAAO,cAwV5B,EArVgCC,KAC9B,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAoB,KAC7CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAwB,OAC3CK,EAAaC,IAAkBN,EAAAA,EAAAA,UAAS,KACxCO,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,KAC1CS,EAAYC,IAAiBV,EAAAA,EAAAA,UAAS,KACtCW,EAAiBC,IAAsBZ,EAAAA,EAAAA,UAAyB,OAChEa,EAAgBC,IAAqBd,EAAAA,EAAAA,WAAS,IAC9Ce,EAAaC,IAAkBhB,EAAAA,EAAAA,UAAwB,OAE9DiB,EAAAA,EAAAA,WAAU,KACcC,WACpBhB,GAAW,GACXE,EAAS,MACT,IAEE,IAAIe,EAAM,GADWC,uCAErB,MAAMC,EAAS,GACXhB,GAAagB,EAAOC,KAAK,WAAWjB,KAEpCgB,EAAOE,SAAQJ,GAAO,IAAIE,EAAOG,KAAK,QAC1C,MAAMC,QAAYC,MAAMP,GACxB,IAAKM,EAAIE,GAAI,MAAM,IAAIC,MAAM,4BAC7B,IAAIC,SAAcJ,EAAIK,QAAQD,KAE1BtB,IAAcsB,EAAOA,EAAKE,OAAQC,GAAWA,EAAEC,SAAW1B,IAE1DE,IAAYoB,EAAOA,EAAKE,OAAQC,GAAWA,EAAEE,MAAQF,EAAEE,KAAKC,WAAW1B,KAE3EoB,EAAKO,KAAK,CAACC,EAAQL,KACjB,MAAMM,EAAW,IAAIC,KAAKF,EAAEG,WAE5B,OADiB,IAAID,KAAKP,EAAEQ,WACZC,UAAYH,EAASG,YAEvC1C,EAAY8B,EACd,CAAE,MAAOa,GACPtC,EAASsC,EAAIC,SAAW,0BAC1B,CAAC,QACCzC,GAAW,EACb,GAEF0C,IACC,CAACvC,EAAaE,EAAcE,IAG/B,MAAMoC,EAAeC,MAAMC,KAAK,IAAIC,IAAIlD,EAASmD,IAAIjB,GAAK,GAAGA,EAAEkB,WAAWlB,EAAEmB,eACzEF,IAAIG,IACH,MAAOC,EAAIC,GAAQF,EAAIG,MAAM,KAC7B,MAAO,CAAEF,KAAIC,UAGjB,OACEE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4DAA2DC,SAAC,yBAC1EF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0EAAyEC,SAAA,EACtFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,8BAA6BC,SAAC,sBAC/CF,EAAAA,EAAAA,MAAA,UACE7D,MAAOU,EACPuD,SAAUC,GAAKvD,EAAeuD,EAAEC,OAAOnE,OACvC8D,UAAU,4HAA2HC,SAAA,EAErIC,EAAAA,EAAAA,KAAA,UAAQhE,MAAM,GAAE+D,SAAC,gBAChBb,EAAaI,IAAIc,IAChBJ,EAAAA,EAAAA,KAAA,UAAuBhE,MAAOoE,EAAMV,GAAGK,SAAEK,EAAMT,MAAlCS,EAAMV,SAGvBM,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mCAAkCC,SAAC,aACpDF,EAAAA,EAAAA,MAAA,UACE7D,MAAOY,EACPqD,SAAUC,GAAKrD,EAAgBqD,EAAEC,OAAOnE,OACxC8D,UAAU,4HAA2HC,SAAA,EAErIC,EAAAA,EAAAA,KAAA,UAAQhE,MAAM,GAAE+D,SAAC,iBAChBhE,EAAcuD,IAAIe,IACjBL,EAAAA,EAAAA,KAAA,UAAwBhE,MAAOqE,EAAIrE,MAAM+D,SAAEM,EAAIpE,OAAlCoE,EAAIrE,YAGrBgE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mCAAkCC,SAAC,WACpDC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLtE,MAAOc,EACPmD,SAAUC,GAAKnD,EAAcmD,EAAEC,OAAOnE,OACtC8D,UAAU,4HACVS,MAAO,CAAEC,SAAU,WAGvBX,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qCAAoCC,SAAA,CAAC,oBAAgBC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAE5D,EAASyB,gBAE5HoC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kFAAiFC,UAC9FC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SACpCzD,GACC0D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,SAAC,wBACrDvD,GACFwD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6CAA4CC,SAAEvD,IACvC,IAApBL,EAASyB,QACXoC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gCAA+BC,SAAC,wBAE/CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uBAAsBC,UACnCF,EAAAA,EAAAA,MAAA,SAAOC,UAAU,0CAAyCC,SAAA,EAC1DC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,wEAAuEC,UACtFF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4EAA2EC,SAAC,WAC1FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4EAA2EC,SAAC,eAC1FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4EAA2EC,SAAC,gBAC1FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4EAA2EC,SAAC,UAC1FC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,UACzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,cACzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,UACzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,YACzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,aACzFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2EAA0EC,SAAC,iBAG7FC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SACxC5D,EAASmD,IAAIjB,IACZwB,EAAAA,EAAAA,MAAA,MAAgBC,UAAU,uCAAsCC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gEAA+DC,SAAE1B,EAAEmB,aACjFQ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oDAAmDC,SAAE1B,EAAEoC,YACrET,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kGAAkGY,MAAOrC,EAAEsC,UAAUZ,SAAE1B,EAAEsC,aACvIX,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oEAAmEC,SAAE1B,EAAEE,KAAO,IAAIK,KAAKP,EAAEE,MAAMqC,qBAAuB,MACpIZ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,SAAE1B,EAAEwC,QACtDhB,EAAAA,EAAAA,MAAA,MAAIC,UAAU,qCAAoCC,SAAA,CAAE1B,EAAEyC,SAAS,WAC/Dd,EAAAA,EAAAA,KAAA,MAAIF,UAAU,gDAA+CC,SAAE1B,EAAE0C,eACjEf,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qCAAoCC,UAChDC,EAAAA,EAAAA,KAAA,QAAMF,UAAW,sEAAkF,YAAbzB,EAAEC,QAAyBD,EAAEC,OAAwD,cAAbD,EAAEC,OAAyB,8BAA6C,cAAbD,EAAEC,OAAyB,4BAA8B,4BAAtJ,iCAAoLyB,SAAG1B,EAAEC,OAAUD,EAAEC,OAAO0C,OAAO,GAAGC,cAAgB5C,EAAEC,OAAO4C,MAAM,GAAM,eAEzXlB,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2DAA0DC,SAAE1B,EAAEQ,UAAY,IAAID,KAAKP,EAAEQ,WAAW+B,qBAAuB,MACrIZ,EAAAA,EAAAA,KAAA,MAAIF,UAAU,iDAAgDC,UAC5DC,EAAAA,EAAAA,KAAA,UACEF,UAAU,oJACVqB,QAASA,IAAMlE,EAAmBoB,GAClC+C,SAAU,EACV,aAAY,oBAAoB/C,EAAEoC,WAAWV,SAC9C,aAlBI1B,EAAEgD,iBA6BtBrE,IACCgD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,6EAA4EC,UACzFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6EAA4EC,SAAA,EACzFC,EAAAA,EAAAA,KAAA,UACEF,UAAU,2DACVqB,QAASA,IAAMlE,EAAmB,MAClC,aAAW,QAAO8C,UAElBC,EAAAA,EAAAA,KAAA,OAAKsB,MAAM,6BAA6BxB,UAAU,UAAUyB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAc1B,UAC/GC,EAAAA,EAAAA,KAAA,QAAM0B,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8BAGzE7B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0CAAyCC,SAAC,qBACxDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,WAAa,IAAE/C,EAAgBwC,cACpEK,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,UAAY,IAAE/C,EAAgByD,SAAS,KAAGzD,EAAgB2D,UAAU,WAE3Gd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,WAAa,IAAE/C,EAAgB8E,aAAe,QACnFjC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,WAAa,IAAE/C,EAAgB+E,aAEtElC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,eAAiB,IAAE/C,EAAgBuB,KAAO,IAAIK,KAAK5B,EAAgBuB,MAAMqC,qBAAuB,GAAG,IAAE5D,EAAgB6D,SAC1JhB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,mBAAqB,IAAE/C,EAAgB8D,SAAS,SAAO9D,EAAgB+D,mBAE9GlB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,gBAAkB,KAACC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,oCAAmCC,SAAE/C,EAAgBgF,QAAShC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,uBAAsBC,SAAC,iBAG1KF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EAAKC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gBAAeC,SAAC,aAAe,IAAE/C,EAAgB6B,UAAY,IAAID,KAAK5B,EAAgB6B,WAAW+B,qBAAuB,UAG/If,EAAAA,EAAAA,MAAA,QACEoC,SAAU1E,UACR2C,EAAEgC,iBACF/E,GAAkB,GAClBE,EAAe,MACf,MAAM8E,EAAOjC,EAAEC,OAOTiC,EAAYD,EAAK7D,OAAOtC,MACxBqG,EAAiBF,EAAKG,YAAcH,EAAKG,YAAYtG,MAAQgB,EAAgBsF,YAC7EC,EAAUJ,EAAK5D,KAAKvC,MACpBwG,EAAUL,EAAKtB,KAAK7E,MACpByG,EAAmBN,EAAKO,cAAgBP,EAAKO,cAAc1G,MAAQgB,EAAgB0F,cACzF,GAAkB,cAAdN,KAA+BC,GAA4C,KAA1BA,EAAeM,QAGlE,OAFAtF,EAAe,2DACfF,GAAkB,GAGpB,IACE,MAAMyF,EAAenF,wBAYrB,WAXkBM,MAAM,GAAG6E,kBAA6B5F,EAAgBqE,MAAO,CAC7EwB,OAAQ,QACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB3E,OAAQ8D,EACRE,YAAaD,EACb9D,KAAMgE,EACN1B,KAAM2B,EACNE,cAAeD,OAGVzE,GAAI,MAAM,IAAIC,MAAM,4BAE7B7B,EAAY8G,GACVA,EAAK5D,IAAIjB,GACPA,EAAEgD,MAAQrE,EAAgBqE,IACtB,IAAKhD,EAAGC,OAAQ8D,EAAWE,YAAaD,EAAgB9D,KAAMgE,EAAS1B,KAAM2B,EAASE,cAAeD,GACrGpE,IAGRpB,EAAmBkG,GACjBA,EAAK,IAAKA,EAAI7E,OAAQ8D,EAAWE,YAAaD,EAAgB9D,KAAMgE,EAAS1B,KAAM2B,EAASE,cAAeD,GAAqBU,EAEpI,CAAE,MAAOpE,GACP1B,EAAe0B,EAAIC,SAAW,yBAChC,CAAC,QACC7B,GAAkB,EACpB,GACA4C,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,aAC5CC,EAAAA,EAAAA,KAAA,UACEL,KAAK,SACLyD,aAAcpG,EAAgBsB,OAC9BwB,UAAU,gDACVuD,SAAUnG,EAAe6C,SAExBhE,EAAcuD,IAAIe,IACjBL,EAAAA,EAAAA,KAAA,UAAwBhE,MAAOqE,EAAIrE,MAAM+D,SAAEM,EAAIpE,OAAlCoE,EAAIrE,cAIvB6D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,WAC9CC,EAAAA,EAAAA,KAAA,SACIM,KAAK,OACLX,KAAK,OACLyD,aAAcpG,EAAgBuB,KAAOvB,EAAgBuB,KAAKqB,MAAM,KAAK,GAAK,GAC1EE,UAAU,2DACVuD,SAAUnG,EACVoG,UAAQ,QAGZzD,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,WAC5CC,EAAAA,EAAAA,KAAA,SACEM,KAAK,OACLX,KAAK,OACLyD,aAAcpG,EAAgB6D,KAC9Bf,UAAU,kCACVuD,SAAUnG,EACVoG,UAAQ,cAKhBzD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,mBAC5CC,EAAAA,EAAAA,KAAA,SACEM,KAAK,MACLX,KAAK,cACLyD,aAAcpG,EAAgBsF,aAAe,GAC7CxC,UAAU,kCACVyD,YAAY,cACZF,SAAUnG,EACVoG,SAAqC,cAA3BtG,EAAgBsB,aAG9BuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,2BAA0BC,SAAC,qBAC5CC,EAAAA,EAAAA,KAAA,YACEL,KAAK,gBACLyD,aAAcpG,EAAgB0F,eAAiB,GAC/C5C,UAAU,+CACVyD,YAAY,iCACZF,SAAUnG,OAGbE,IAAe4C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAAE3C,QAGtDyC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,UACEF,UAAU,sFACVQ,KAAK,SACL+C,SAAUnG,EACViE,QAASA,KACP,MAAMgB,EAAOqB,SAASC,cAAc,QAChCtB,GAAMA,EAAKuB,iBACf3D,SAED7C,EAAiB,cAAgB,YAEpC8C,EAAAA,EAAAA,KAAA,UACEF,UAAU,gFACVqB,QAAS5D,UACP,GAAKoG,OAAOC,QAAQ,+EAApB,CACAzG,GAAkB,GAClBE,EAAe,MACf,IACE,MAAMuF,EAAenF,wBAIrB,WAHkBM,MAAM,GAAG6E,kBAA6B5F,EAAgBqE,MAAO,CAC7EwB,OAAQ,YAED7E,GAAI,MAAM,IAAIC,MAAM,4BAC7B7B,EAAY8G,GAAQA,EAAK9E,OAAOC,GAAKA,EAAEgD,MAAQrE,EAAgBqE,MAC/DpE,EAAmB,KACrB,CAAE,MAAO8B,GACP1B,EAAe0B,EAAIC,SAAW,yBAChC,CAAC,QACC7B,GAAkB,EACpB,CAf0G,GAiB5GkG,SAAUnG,EAAe6C,SAC1B,sB","sources":["pages/admin/AdminBookings.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\ninterface Booking {\r\n  _id: string;\r\n  coachId: string;\r\n  coachName: string;\r\n  userName: string;\r\n  userEmail: string;\r\n  phoneNumber?: string;\r\n  date: string;\r\n  time: string;\r\n  duration: number;\r\n  topic: string;\r\n  notes: string;\r\n  sessionType: string;\r\n  createdAt: string;\r\n  status: string;\r\n  meetingLink?: string;\r\n  adminComments?: string;\r\n}\r\n\r\nconst statusOptions = [\r\n  { value: 'pending', label: 'Pending' },\r\n  { value: 'scheduled', label: 'Scheduled' },\r\n  { value: 'completed', label: 'Completed' },\r\n  { value: 'cancel', label: 'Cancelled' },\r\n];\r\n\r\nconst AdminBookings: React.FC = () => {\r\n  const [bookings, setBookings] = useState<Booking[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [filterCoach, setFilterCoach] = useState('');\r\n  const [filterStatus, setFilterStatus] = useState('');\r\n  const [filterDate, setFilterDate] = useState('');\r\n  const [selectedBooking, setSelectedBooking] = useState<Booking | null>(null);\r\n  const [statusUpdating, setStatusUpdating] = useState(false);\r\n  const [statusError, setStatusError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n        let url = `${API_BASE_URL}/api/bookings`;\r\n        const params = [];\r\n        if (filterCoach) params.push(`coachId=${filterCoach}`);\r\n        // Fetch all, filter client-side for status/date\r\n        if (params.length) url += `?${params.join('&')}`;\r\n        const res = await fetch(url);\r\n        if (!res.ok) throw new Error('Failed to fetch bookings');\r\n        let data = (await res.json()).data;\r\n        // Filter by status\r\n        if (filterStatus) data = data.filter((b: any) => b.status === filterStatus);\r\n        // Filter by date\r\n        if (filterDate) data = data.filter((b: any) => b.date && b.date.startsWith(filterDate));\r\n        // Sort descending by creation date/time\r\n        data.sort((a: any, b: any) => {\r\n          const createdA = new Date(a.createdAt);\r\n          const createdB = new Date(b.createdAt);\r\n          return createdB.getTime() - createdA.getTime();\r\n        });\r\n        setBookings(data);\r\n      } catch (err: any) {\r\n        setError(err.message || 'Error fetching bookings');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchBookings();\r\n  }, [filterCoach, filterStatus, filterDate]);\r\n\r\n  // Get unique coaches for filter dropdown\r\n  const coachOptions = Array.from(new Set(bookings.map(b => `${b.coachId}|${b.coachName}`)))\r\n    .map(str => {\r\n      const [id, name] = str.split('|');\r\n      return { id, name };\r\n    });\r\n\r\n  return (\r\n    <div className=\"p-6 md:p-10 max-w-7xl mx-auto\">\r\n      <h1 className=\"text-4xl font-extrabold text-gray-900 mb-8 tracking-tight\">Bookings Management</h1>\r\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6\">\r\n        <div className=\"flex flex-wrap items-center gap-3\">\r\n          <label className=\"font-semibold text-gray-700\">Filter by Coach:</label>\r\n          <select\r\n            value={filterCoach}\r\n            onChange={e => setFilterCoach(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg px-4 py-2 bg-white shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"\">All Coaches</option>\r\n            {coachOptions.map(coach => (\r\n              <option key={coach.id} value={coach.id}>{coach.name}</option>\r\n            ))}\r\n          </select>\r\n          <label className=\"font-semibold text-gray-700 ml-4\">Status:</label>\r\n          <select\r\n            value={filterStatus}\r\n            onChange={e => setFilterStatus(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg px-4 py-2 bg-white shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n          >\r\n            <option value=\"\">All Statuses</option>\r\n            {statusOptions.map(opt => (\r\n              <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n            ))}\r\n          </select>\r\n          <label className=\"font-semibold text-gray-700 ml-4\">Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            value={filterDate}\r\n            onChange={e => setFilterDate(e.target.value)}\r\n            className=\"border border-gray-300 rounded-lg px-4 py-2 bg-white shadow-sm focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\r\n            style={{ minWidth: 140 }}\r\n          />\r\n        </div>\r\n        <div className=\"text-sm text-gray-500 mt-2 md:mt-0\">Total Bookings: <span className=\"font-bold text-indigo-600\">{bookings.length}</span></div>\r\n      </div>\r\n      <div className=\"rounded-xl shadow-lg overflow-hidden border border-gray-200 bg-white max-w-full\">\r\n        <div className=\"overflow-x-auto w-full\">\r\n          {loading ? (\r\n            <div className=\"p-8 text-center text-lg text-gray-500\">Loading bookings...</div>\r\n          ) : error ? (\r\n            <div className=\"p-8 text-center text-red-600 font-semibold\">{error}</div>\r\n          ) : bookings.length === 0 ? (\r\n            <div className=\"p-8 text-center text-gray-400\">No bookings found.</div>\r\n          ) : (\r\n            <div className=\"w-full min-w-[900px]\">\r\n              <table className=\"w-full text-sm md:text-base table-fixed\">\r\n              <thead className=\"bg-gradient-to-r from-indigo-50 to-purple-50 border-b border-gray-200\">\r\n                <tr>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[110px]\">Coach</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[110px]\">User Name</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[220px]\">User Email</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[100px]\">Date</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[60px]\">Time</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[70px]\">Duration</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[70px]\">Mode</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[80px]\">Status</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[90px]\">Created</th>\r\n                  <th className=\"p-3 font-semibold text-left text-gray-700 whitespace-nowrap min-w-[80px]\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-100\">\r\n                {bookings.map(b => (\r\n                  <tr key={b._id} className=\"hover:bg-indigo-50 transition-colors\">\r\n                    <td className=\"p-3 font-medium text-gray-900 whitespace-nowrap min-w-[110px]\">{b.coachName}</td>\r\n                    <td className=\"p-3 text-gray-800 whitespace-nowrap min-w-[110px]\">{b.userName}</td>\r\n                    <td className=\"p-3 text-indigo-700 whitespace-nowrap min-w-[220px] max-w-[240px] overflow-hidden text-ellipsis\" title={b.userEmail}>{b.userEmail}</td>\r\n                    <td className=\"p-3 whitespace-nowrap text-indigo-600 font-semibold min-w-[100px]\">{b.date ? new Date(b.date).toLocaleDateString() : ''}</td>\r\n                    <td className=\"p-3 whitespace-nowrap min-w-[60px]\">{b.time}</td>\r\n                    <td className=\"p-3 whitespace-nowrap min-w-[70px]\">{b.duration} min</td>\r\n                    <td className=\"p-3 whitespace-nowrap capitalize min-w-[70px]\">{b.sessionType}</td>\r\n                    <td className=\"p-3 whitespace-nowrap min-w-[80px]\">\r\n                      <span className={`inline-block px-2 py-1 rounded text-xs font-semibold align-middle ${b.status === 'pending' || !b.status ? 'bg-yellow-100 text-yellow-800' : b.status === 'completed' ? 'bg-green-100 text-green-700' : b.status === 'scheduled' ? 'bg-blue-100 text-blue-700' : 'bg-gray-100 text-gray-600'}`}>{(b.status ? (b.status.charAt(0).toUpperCase() + b.status.slice(1)) : 'Pending')}</span>\r\n                    </td>\r\n                    <td className=\"p-3 whitespace-nowrap text-xs text-gray-500 min-w-[90px]\">{b.createdAt ? new Date(b.createdAt).toLocaleDateString() : ''}</td>\r\n                    <td className=\"p-3 whitespace-nowrap min-w-[80px] text-center\">\r\n                      <button\r\n                        className=\"px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-xs font-semibold shadow focus:outline-none focus:ring-2 focus:ring-indigo-400\"\r\n                        onClick={() => setSelectedBooking(b)}\r\n                        tabIndex={0}\r\n                        aria-label={`View booking for ${b.userName}`}\r\n                      >View</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {/* Booking Details Modal */}\r\n      {selectedBooking && (\r\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\r\n          <div className=\"bg-white rounded-xl shadow-2xl max-w-lg w-full p-8 relative animate-fadeIn\">\r\n            <button\r\n              className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-700\"\r\n              onClick={() => setSelectedBooking(null)}\r\n              aria-label=\"Close\"\r\n            >\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n              </svg>\r\n            </button>\r\n            <h2 className=\"text-2xl font-bold mb-4 text-indigo-700\">Booking Details</h2>\r\n            <div className=\"grid grid-cols-1 gap-2 mb-4 text-sm\">\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <div><span className=\"font-semibold\">Coach:</span> {selectedBooking.coachName}</div>\r\n                <div><span className=\"font-semibold\">User:</span> {selectedBooking.userName} ({selectedBooking.userEmail})</div>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <div><span className=\"font-semibold\">Phone:</span> {selectedBooking.phoneNumber || '-'}</div>\r\n                <div><span className=\"font-semibold\">Topic:</span> {selectedBooking.topic}</div>\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-2\">\r\n                <div><span className=\"font-semibold\">Date/Time:</span> {selectedBooking.date ? new Date(selectedBooking.date).toLocaleDateString() : ''} {selectedBooking.time}</div>\r\n                <div><span className=\"font-semibold\">Duration/Type:</span> {selectedBooking.duration} min, {selectedBooking.sessionType}</div>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-semibold\">User Notes:</span> <span className=\"whitespace-pre-line text-gray-700\">{selectedBooking.notes || <span className=\"italic text-gray-400\">(none)</span>}</span>\r\n              </div>\r\n              {/* Removed Admin Notes from static details section as requested */}\r\n              <div><span className=\"font-semibold\">Created:</span> {selectedBooking.createdAt ? new Date(selectedBooking.createdAt).toLocaleDateString() : ''}</div>\r\n              {/* Removed static Admin Comments display above the textarea */}\r\n            </div>\r\n            <form\r\n              onSubmit={async e => {\r\n                e.preventDefault();\r\n                setStatusUpdating(true);\r\n                setStatusError(null);\r\n                const form = e.target as typeof e.target & {\r\n                  status: { value: string };\r\n                  meetingLink?: { value: string };\r\n                  date: { value: string };\r\n                  time: { value: string };\r\n                  adminComments?: { value: string };\r\n                };\r\n                const newStatus = form.status.value;\r\n                const newMeetingLink = form.meetingLink ? form.meetingLink.value : selectedBooking.meetingLink;\r\n                const newDate = form.date.value;\r\n                const newTime = form.time.value;\r\n                const newAdminComments = form.adminComments ? form.adminComments.value : selectedBooking.adminComments;\r\n                if (newStatus === 'scheduled' && (!newMeetingLink || newMeetingLink.trim() === '')) {\r\n                  setStatusError('Meeting link is required when status is Scheduled.');\r\n                  setStatusUpdating(false);\r\n                  return;\r\n                }\r\n                try {\r\n                  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n                  const res = await fetch(`${API_BASE_URL}/api/bookings/${selectedBooking._id}`, {\r\n                    method: 'PATCH',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                      status: newStatus,\r\n                      meetingLink: newMeetingLink,\r\n                      date: newDate,\r\n                      time: newTime,\r\n                      adminComments: newAdminComments\r\n                    })\r\n                  });\r\n                  if (!res.ok) throw new Error('Failed to update booking');\r\n                  // Update local state\r\n                  setBookings(prev =>\r\n                    prev.map(b =>\r\n                      b._id === selectedBooking._id\r\n                        ? { ...b, status: newStatus, meetingLink: newMeetingLink, date: newDate, time: newTime, adminComments: newAdminComments }\r\n                        : b\r\n                    )\r\n                  );\r\n                  setSelectedBooking(sb =>\r\n                    sb ? { ...sb, status: newStatus, meetingLink: newMeetingLink, date: newDate, time: newTime, adminComments: newAdminComments } : sb\r\n                  );\r\n                } catch (err: any) {\r\n                  setStatusError(err.message || 'Error updating booking');\r\n                } finally {\r\n                  setStatusUpdating(false);\r\n                }\r\n              }}\r\n            >\r\n              <div className=\"grid grid-cols-2 gap-3 mb-3\">\r\n                <div>\r\n                  <label className=\"block font-semibold mb-1\">Status:</label>\r\n                  <select\r\n                    name=\"status\"\r\n                    defaultValue={selectedBooking.status}\r\n                    className=\"border rounded px-3 py-2 w-full max-w-[140px]\"\r\n                    disabled={statusUpdating}\r\n                  >\r\n                    {statusOptions.map(opt => (\r\n                      <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  <div>\r\n                    <label className=\"block font-semibold mb-1\">Date:</label>\r\n                  <input\r\n                      type=\"date\"\r\n                      name=\"date\"\r\n                      defaultValue={selectedBooking.date ? selectedBooking.date.split('T')[0] : ''}\r\n                      className=\"border rounded px-3 py-2 w-full min-w-[180px] max-w-full\"\r\n                      disabled={statusUpdating}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block font-semibold mb-1\">Time:</label>\r\n                    <input\r\n                      type=\"time\"\r\n                      name=\"time\"\r\n                      defaultValue={selectedBooking.time}\r\n                      className=\"border rounded px-3 py-2 w-full\"\r\n                      disabled={statusUpdating}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"block font-semibold mb-1\">Meeting Link:</label>\r\n                <input\r\n                  type=\"url\"\r\n                  name=\"meetingLink\"\r\n                  defaultValue={selectedBooking.meetingLink || ''}\r\n                  className=\"border rounded px-3 py-2 w-full\"\r\n                  placeholder=\"https://...\"\r\n                  disabled={statusUpdating}\r\n                  required={selectedBooking.status === 'scheduled'}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"block font-semibold mb-1\">Admin Comments:</label>\r\n                <textarea\r\n                  name=\"adminComments\"\r\n                  defaultValue={selectedBooking.adminComments || ''}\r\n                  className=\"border rounded px-3 py-2 w-full min-h-[60px]\"\r\n                  placeholder=\"Add internal admin comments...\"\r\n                  disabled={statusUpdating}\r\n                />\r\n              </div>\r\n              {statusError && <div className=\"text-red-600 mb-2\">{statusError}</div>}\r\n            </form>\r\n\r\n            <div className=\"mt-6 flex justify-end gap-3\">\r\n              <button\r\n                className=\"px-5 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 font-semibold shadow\"\r\n                type=\"button\"\r\n                disabled={statusUpdating}\r\n                onClick={() => {\r\n                  const form = document.querySelector('form');\r\n                  if (form) form.requestSubmit();\r\n                }}\r\n              >\r\n                {statusUpdating ? 'Updating...' : 'Update'}\r\n              </button>\r\n              <button\r\n                className=\"px-5 py-2 bg-red-600 text-white rounded hover:bg-red-700 font-semibold shadow\"\r\n                onClick={async () => {\r\n                  if (!window.confirm('Are you sure you want to delete this booking? This action cannot be undone.')) return;\r\n                  setStatusUpdating(true);\r\n                  setStatusError(null);\r\n                  try {\r\n                    const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\r\n                    const res = await fetch(`${API_BASE_URL}/api/bookings/${selectedBooking._id}`, {\r\n                      method: 'DELETE',\r\n                    });\r\n                    if (!res.ok) throw new Error('Failed to delete booking');\r\n                    setBookings(prev => prev.filter(b => b._id !== selectedBooking._id));\r\n                    setSelectedBooking(null);\r\n                  } catch (err: any) {\r\n                    setStatusError(err.message || 'Error deleting booking');\r\n                  } finally {\r\n                    setStatusUpdating(false);\r\n                  }\r\n                }}\r\n                disabled={statusUpdating}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminBookings;\r\n"],"names":["statusOptions","value","label","AdminBookings","bookings","setBookings","useState","loading","setLoading","error","setError","filterCoach","setFilterCoach","filterStatus","setFilterStatus","filterDate","setFilterDate","selectedBooking","setSelectedBooking","statusUpdating","setStatusUpdating","statusError","setStatusError","useEffect","async","url","process","params","push","length","join","res","fetch","ok","Error","data","json","filter","b","status","date","startsWith","sort","a","createdA","Date","createdAt","getTime","err","message","fetchBookings","coachOptions","Array","from","Set","map","coachId","coachName","str","id","name","split","_jsxs","className","children","_jsx","onChange","e","target","coach","opt","type","style","minWidth","userName","title","userEmail","toLocaleDateString","time","duration","sessionType","charAt","toUpperCase","slice","onClick","tabIndex","_id","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","phoneNumber","topic","notes","onSubmit","preventDefault","form","newStatus","newMeetingLink","meetingLink","newDate","newTime","newAdminComments","adminComments","trim","API_BASE_URL","method","headers","body","JSON","stringify","prev","sb","defaultValue","disabled","required","placeholder","document","querySelector","requestSubmit","window","confirm"],"sourceRoot":""}