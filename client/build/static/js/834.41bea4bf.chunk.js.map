{"version":3,"file":"static/js/834.41bea4bf.chunk.js","mappings":"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","sources":["services/storageService.ts","services/productFileService.ts","services/productsApiWithFiles.ts","services/supabaseStorage.ts","pages/admin/AdminProducts.tsx"],"sourcesContent":["import { uploadFile, getPublicUrl } from './supabaseStorage';\r\nimport * as supabaseStorage from './supabaseStorage';\r\n\r\n// Singleton storageService to hold the current provider\r\nclass StorageServiceImpl implements StorageProvider {\r\n  provider: StorageProvider;\r\n\r\n  constructor(provider: StorageProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  setProvider(provider: StorageProvider) {\r\n    this.provider = provider;\r\n  }\r\n\r\n  async uploadFile(file: File, path: string): Promise<any> {\r\n    return this.provider.uploadFile(file, path);\r\n  }\r\n\r\n  async getFileUrl(path: string): Promise<string> {\r\n    return this.provider.getFileUrl(path);\r\n  }\r\n\r\n  async listFiles(prefix: string): Promise<string[]> {\r\n    return this.provider.listFiles(prefix);\r\n  }\r\n}\r\n\r\n// Default to supabase as the initial provider\r\nconst supabaseProvider: StorageProvider = {\r\n  uploadFile: supabaseStorage.uploadFile,\r\n  getFileUrl: async (path: string) => supabaseStorage.getPublicUrl(path),\r\n  listFiles: async (prefix: string) => {\r\n    // Supabase Storage: list files with a prefix\r\n    const { data, error } = await supabaseStorage.supabase.storage\r\n      .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n      .list(prefix, { limit: 1000, offset: 0, sortBy: { column: 'name', order: 'asc' } });\r\n    if (error) throw error;\r\n    if (!data) return [];\r\n    // Flatten folders and files into a single array of paths\r\n    const flatten = (items: any[], currentPrefix: string): string[] => {\r\n      let files: string[] = [];\r\n      for (const item of items) {\r\n        if (item.id) {\r\n          // File\r\n          files.push(currentPrefix ? `${currentPrefix}/${item.name}` : item.name);\r\n        } else if (item.name && item.items) {\r\n          // Folder\r\n          files = files.concat(flatten(item.items, currentPrefix ? `${currentPrefix}/${item.name}` : item.name));\r\n        }\r\n      }\r\n      return files;\r\n    };\r\n    return flatten(data, prefix);\r\n  }\r\n};\r\n\r\nexport const storageService = new StorageServiceImpl(supabaseProvider);\r\n\r\n// StorageProvider interface for pluggable storage backends\r\nexport interface StorageProvider {\r\n  uploadFile(file: File, path: string): Promise<any>;\r\n  getFileUrl(path: string): Promise<string>;\r\n  listFiles(prefix: string): Promise<string[]>;\r\n}\r\n\r\nexport async function uploadAnyFile(file: File, path: string) {\r\n  return storageService.uploadFile(file, path);\r\n}\r\n\r\nexport async function getFileUrl(path: string) {\r\n  return storageService.getFileUrl(path);\r\n}\r\n","import { uploadAnyFile, getFileUrl } from './storageService';\r\n\r\n/**\r\n * Product File Types\r\n */\r\nexport enum ProductFileType {\r\n  PDF = 'pdf',\r\n  VIDEO = 'video',\r\n  PRESENTATION = 'presentation',\r\n  EXCEL = 'excel',\r\n  IMAGE = 'image',\r\n  OTHER = 'other'\r\n};\r\n\r\n/**\r\n * Interface for uploaded product files\r\n */\r\nexport interface ProductFile {\r\n  fileId: string;\r\n  originalName: string;\r\n  fileType: ProductFileType;\r\n  url: string;\r\n  size: number;\r\n  uploadDate: string;\r\n  metadata?: Record<string, any>;\r\n  thumbnailUrl?: string;\r\n}\r\n\r\nexport async function uploadProductFile(file: File, productId: string): Promise<ProductFile> {\r\n  const path = `products/${productId}/${file.name}`;\r\n  await uploadAnyFile(file, path);\r\n  const url = await getFileUrl(path);\r\n  return {\r\n    fileId: path,\r\n    originalName: file.name,\r\n    fileType: getFileType(file.name),\r\n    url,\r\n    size: file.size,\r\n    uploadDate: new Date().toISOString(),\r\n    metadata: {},\r\n    thumbnailUrl: undefined,\r\n  };\r\n}\r\n\r\n// Helper to guess file type from extension\r\nexport function getFileType(name: string): ProductFileType {\r\n  if (!name || typeof name !== 'string' || !name.includes('.')) {\r\n    return ProductFileType.OTHER;\r\n  }\r\n  const ext = name.split('.').pop()?.toLowerCase();\r\n  switch (ext) {\r\n    case 'pdf': return ProductFileType.PDF;\r\n    case 'mp4':\r\n    case 'mov':\r\n    case 'avi': return ProductFileType.VIDEO;\r\n    case 'ppt':\r\n    case 'pptx': return ProductFileType.PRESENTATION;\r\n    case 'xls':\r\n    case 'xlsx': return ProductFileType.EXCEL;\r\n    case 'jpg':\r\n    case 'jpeg':\r\n    case 'png':\r\n    case 'gif': return ProductFileType.IMAGE;\r\n    default: return ProductFileType.OTHER;\r\n  }\r\n}\r\n\r\nexport async function getProductFileUrl(productId: string, fileName: string): Promise<string> {\r\n  return await getFileUrl(`products/${productId}/${fileName}`);\r\n}\r\n\r\n// Stub for deleting a product file (Supabase: remove by path)\r\nexport async function deleteProductFile(fileId: string): Promise<void> {\r\n  // TODO: Implement actual deletion with Supabase Storage if needed\r\n  return;\r\n}\r\n\r\n  /**\r\n   * Upload a product file\r\n   */\r\n\r\n// All other product file operations (delete, list, etc.) can be implemented similarly using Supabase Storage if needed.\r\n","import { products } from './api';\r\nimport { ProductFile, ProductFileType, uploadProductFile } from './productFileService';\r\nimport axios from 'axios';\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Extended API for products with file management\r\nexport const productsApiWithFiles = {\r\n  // Core product APIs (same as before)\r\n  getAll: async (params?: { \r\n    productType?: string; \r\n    page?: number; \r\n    limit?: number; \r\n    sortBy?: string; \r\n    sortOrder?: number; \r\n    search?: string; \r\n    category?: string; \r\n    fileType?: string; \r\n    minPrice?: number; \r\n    maxPrice?: number \r\n  }) => {\r\n    try {\r\n      const response = await products.getAll(params);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getById: async (id: string) => {\r\n    try {\r\n      const response = await products.getById(id);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Enhanced product creation with files\r\n  create: async (productData: any, files?: File[]) => {\r\n    try {\r\n      // First create the product to get an ID\r\n      const response = await products.create(productData);\r\n      console.log('Product create API response:', response);\r\n      // Defensive: support both response.data.data and response.data\r\n      const productDataObj = response.data?.data || response.data;\r\n      if (!productDataObj || !productDataObj._id) {\r\n        throw new Error('Product creation response missing _id. Full response: ' + JSON.stringify(response));\r\n      }\r\n      const productId = productDataObj._id;\r\n\r\n      // If we have files, upload them and update the product\r\n      if (files && files.length > 0) {\r\n        try {\r\n          const productFiles = await uploadProductFiles(files, productId);\r\n          // Update the product with file information\r\n          const updatedProduct = {\r\n            ...productDataObj,\r\n            files: productFiles,\r\n            hasFiles: true,\r\n          };\r\n          // Update the product\r\n          const updateResponse = await products.update(productId, updatedProduct);\r\n          console.log('Product update with files response:', updateResponse);\r\n          if (!updateResponse.data || !Array.isArray(updateResponse.data.files) || updateResponse.data.files.length === 0) {\r\n            throw new Error('Product update succeeded but files array is missing or empty.');\r\n          }\r\n          return updateResponse.data;\r\n        } catch (fileUpdateError) {\r\n          console.error('Error updating product with files:', fileUpdateError);\r\n          throw fileUpdateError;\r\n        }\r\n      } else {\r\n        // If no files, ensure files is at least an empty array\r\n        if (!productDataObj.files) {\r\n          const updateResponse = await products.update(productId, { ...productDataObj, files: [] });\r\n          return updateResponse.data;\r\n        }\r\n      }\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating product:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Enhanced product update with files\r\n  update: async (id: string, productData: any, files?: File[], filesToDelete?: string[]) => {\r\n    try {\r\n      console.log('[productsApiWithFiles.update] START', { id, productData, files, filesToDelete });\r\n      // Handle file deletions if any\r\n      if (filesToDelete && filesToDelete.length > 0) {\r\n        await Promise.all(filesToDelete.map(filePath => {\r\n          // TODO: Implement deleteProductFile as a named export if needed\r\n          // productFileService.deleteProductFile(filePath)\r\n          // For now, skip or implement delete logic here\r\n          // Example: await deleteProductFile(filePath);\r\n          // (deleteProductFile not implemented in productFileService)\r\n          return Promise.resolve();\r\n        }));\r\n      }\r\n\r\n      // Upload new files if any\r\n      let productFiles: ProductFile[] = [];\r\n      if (files && files.length > 0) {\r\n        productFiles = await uploadProductFiles(files, id);\r\n        // Merge with existing files\r\n        const existingFiles = productData.files || [];\r\n        productData.files = [...existingFiles, ...productFiles];\r\n        productData.hasFiles = true;\r\n      } else {\r\n        // If no new files, preserve existing files if present\r\n        if (!productData.files) {\r\n          // Fetch the current product to get its files\r\n          const current = await products.getById(id);\r\n          productData.files = current.data?.files || [];\r\n        }\r\n      }\r\n\r\n      console.log('[productsApiWithFiles.update] before API call', { id, productData });\r\n      // Update the product\r\n      const response = await products.update(id, productData);\r\n      console.log('[productsApiWithFiles.update] after API call', { response });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error updating product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  delete: async (id: string) => {\r\n    try {\r\n      // Get the product to find associated files\r\n      const productResponse = await api.get(`/api/products/${id}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      // Delete associated files if any\r\n      if (product.files && Array.isArray(product.files) && product.files.length > 0) {\r\n        await Promise.all(product.files.map((file: ProductFile) => {\r\n          // TODO: Implement deleteProductFile as a named export if needed\r\n          // productFileService.deleteProductFile(file.fileId)\r\n          // For now, skip or implement delete logic here\r\n          // Example: await deleteProductFile(file.fileId);\r\n          // (deleteProductFile not implemented in productFileService)\r\n          return Promise.resolve();\r\n        }));\r\n      }\r\n      \r\n      // Delete the product\r\n      const response = await api.delete(`/api/products/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // File-specific operations\r\n  uploadFile: async (productId: string, file: File, metadata?: Record<string, any>) => {\r\n    try {\r\n      const productFile = await uploadProductFile(file, productId);\r\n      \r\n      // Update the product record with the new file\r\n      const productResponse = await api.get(`/api/products/${productId}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      const files = product.files || [];\r\n      files.push(productFile);\r\n      \r\n      const updatedProduct = {\r\n        ...product,\r\n        files,\r\n        hasFiles: true,\r\n      };\r\n      \r\n      // Update the product\r\n      const updateResponse = await api.put(`/api/products/${productId}`, updatedProduct);\r\n      return {\r\n        file: productFile,\r\n        product: updateResponse.data.data\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error uploading file for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  deleteFile: async (productId: string, fileId: string) => {\r\n    try {\r\n      // Delete the actual file\r\n      // TODO: Implement deleteProductFile as a named export if needed\r\n      // await productFileService.deleteProductFile(fileId);\r\n      // For now, skip or implement delete logic here\r\n      // Example: await deleteProductFile(fileId);\r\n      // (deleteProductFile not implemented in productFileService)\r\n      \r\n      // Update the product record\r\n      const productResponse = await axios.get(`/api/products/${productId}`);\r\n      const product = productResponse.data.data;\r\n      \r\n      // Remove the file from the product's files array\r\n      const updatedFiles = (product.files || []).filter(\r\n        (file: ProductFile) => file.fileId !== fileId\r\n      );\r\n      \r\n      const updatedProduct = {\r\n        ...product,\r\n        files: updatedFiles,\r\n        hasFiles: updatedFiles.length > 0,\r\n      };\r\n      \r\n      // Update the product\r\n      const updateResponse = await axios.put(`/api/products/${productId}`, updatedProduct);\r\n      return updateResponse.data;\r\n    } catch (error) {\r\n      console.error(`Error deleting file ${fileId} for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  // Get all files for a product\r\n  getFiles: async (productId: string) => {\r\n    try {\r\n      const response = await products.getById(productId);\r\n      return response.data.data.files || [];\r\n    } catch (error) {\r\n      console.error(`Error getting files for product ${productId}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Simulate product purchase (should call backend endpoint in real app)\r\n  purchase: async (productId: string) => {\r\n    // TODO: Replace with real purchase API call\r\n    // Example: await axios.post(`/api/products/${productId}/purchase`);\r\n    return Promise.resolve({ success: true });\r\n  },\r\n\r\n  // Get secure download URL for a file (should call backend endpoint in real app)\r\n  getDownloadUrl: async (productId: string, fileId: string) => {\r\n    // TODO: Replace with real API call to get signed URL\r\n    // Example: const res = await axios.get(`/api/products/${productId}/files/${fileId}/download-url`);\r\n    // return res.data.url;\r\n    return null;\r\n  }\r\n};\r\n\r\n// Helper function to upload multiple files for a product\r\nasync function uploadProductFiles(files: File[], productId: string): Promise<ProductFile[]> {\r\n  // Filter out files without a valid name and throw an error if any are invalid\r\n  const invalidFiles = files.filter(f => !f || !f.name || typeof f.name !== 'string' || f.name.trim() === '');\r\n  if (invalidFiles.length > 0) {\r\n    throw new Error('One or more files are missing a valid name. Please re-select your files and try again.');\r\n  }\r\n  const uploadPromises = files.map(file => uploadProductFile(file, productId));\r\n  return await Promise.all(uploadPromises);\r\n}\r\n\r\nexport default productsApiWithFiles;\r\n","import { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL!;\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY!;\r\nexport const supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport async function uploadFile(file: File, path: string) {\r\n  const { data, error } = await supabase.storage\r\n    .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n    .upload(path, file, { upsert: true });\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport function getPublicUrl(path: string) {\r\n  return supabase.storage\r\n    .from(process.env.REACT_APP_SUPABASE_BUCKET!)\r\n    .getPublicUrl(path).data.publicUrl;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { productsApiWithFiles } from '../../services/productsApiWithFiles';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface Product {\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  image: string;\r\n  category: string;\r\n  featured: boolean;\r\n  productType?: 'individual' | 'enterprise';\r\n  oldPrice?: number;\r\n  badge?: string;\r\n  features?: string[];\r\n  createdAt: string;\r\n}\r\n\r\nconst AdminProducts: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [formMode, setFormMode] = useState<'create' | 'edit'>('create');\r\n  // Pagination state\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [total, setTotal] = useState(0);\r\n  // Product form state\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    oldPrice: 0,\r\n    image: '',\r\n    category: '',\r\n    productType: 'individual' as 'individual' | 'enterprise',\r\n    badge: '',\r\n    features: [''],\r\n    featured: false,\r\n    isFree: false,\r\n  });\r\n  const [imagePreviews, setImagePreviews] = useState<string[]>([]);\r\n  const [pendingFiles, setPendingFiles] = useState<File[]>([]);\r\n  const [filesToDelete, setFilesToDelete] = useState<string[]>([]);\r\n\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [page, pageSize]);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await productsApiWithFiles.getAll({ page, limit: pageSize });\r\n      setProducts(response.data?.data || response.data || response);\r\n      setTotal(response.totalCount || response.data?.totalCount || 0);\r\n      setError(null);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to load products. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOpenForm = (mode: 'create' | 'edit', product?: Product) => {\r\n    setFormMode(mode);\r\n    if (mode === 'edit' && product) {\r\n      setSelectedProduct(product);\r\n      setFormData({\r\n        name: product.name,\r\n        description: product.description,\r\n        price: product.price,\r\n        oldPrice: product.oldPrice || 0,\r\n        image: product.image || '',\r\n        category: product.category || '',\r\n        productType: product.productType || 'individual',\r\n        badge: product.badge || '',\r\n        features: product.features || [''],\r\n        featured: product.featured || false,\r\n        isFree: false,\r\n      });\r\n    } else {\r\n      setSelectedProduct(null);\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        price: 0,\r\n        oldPrice: 0,\r\n        image: '',\r\n        category: '',\r\n        productType: 'individual',\r\n        badge: '',\r\n        features: [''],\r\n        featured: false,\r\n        isFree: false,\r\n      });\r\n    }\r\n    setIsFormOpen(true);\r\n  };\r\n\r\n  const handleCloseForm = () => {\r\n    setIsFormOpen(false);\r\n    setSelectedProduct(null);\r\n    setError(null);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox'\r\n        ? (e.target as HTMLInputElement).checked\r\n        : name === 'price' || name === 'oldPrice'\r\n          ? parseFloat(value) || 0\r\n          : value\r\n    }));\r\n  };\r\n\r\n  const handleFeatureChange = (index: number, value: string) => {\r\n    setFormData(prev => {\r\n      const updatedFeatures = [...prev.features];\r\n      updatedFeatures[index] = value;\r\n      return {\r\n        ...prev,\r\n        features: updatedFeatures\r\n      };\r\n    });\r\n  };\r\n\r\n  const addFeature = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      features: [...prev.features, '']\r\n    }));\r\n  };\r\n\r\n  const removeFeature = (index: number) => {\r\n    setFormData(prev => {\r\n      const updatedFeatures = prev.features.filter((_, i) => i !== index);\r\n      return {\r\n        ...prev,\r\n        features: updatedFeatures.length ? updatedFeatures : ['']\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    if (\r\n      !formData.name ||\r\n      !formData.description ||\r\n      !formData.category ||\r\n      formData.name.trim() === '' ||\r\n      formData.description.trim() === '' ||\r\n      formData.category.trim() === ''\r\n    ) {\r\n      setError('Please fill in all required fields.');\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      if (formMode === 'create') {\r\n        await productsApiWithFiles.create(formData, []);\r\n        toast.success('Product created successfully!');\r\n        handleCloseForm();\r\n        await fetchProducts();\r\n      } else if (formMode === 'edit' && selectedProduct?._id) {\r\n        await productsApiWithFiles.update(selectedProduct._id, formData, [], []);\r\n        toast.success('Product updated successfully!');\r\n        handleCloseForm();\r\n        await fetchProducts();\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to save product. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProduct = async (productId: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this product?')) return;\r\n    try {\r\n      setLoading(true);\r\n      await productsApiWithFiles.delete(productId);\r\n      toast.success('Product deleted successfully!');\r\n      await fetchProducts();\r\n    } catch (err) {\r\n      setError('Failed to delete product. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-2 sm:px-4 lg:px-6 py-8 bg-gradient-to-br from-gray-50 via-white to-indigo-50 min-h-screen\">\r\n      <div className=\"flex justify-between items-center mb-7\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-800 tracking-tight\">Product Management</h1>\r\n          <p className=\"mt-1 text-sm text-gray-500\">Add, edit, and manage products for the WinGroX AI marketplace.</p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={() => navigate('/admin')}\r\n            className=\"inline-flex items-center px-3 py-2 border border-gray-200 rounded-md shadow text-sm text-gray-600 bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-300 transition\"\r\n          >\r\n            <svg className=\"-ml-1 mr-1 h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n            </svg>\r\n            Dashboard\r\n          </button>\r\n          <button\r\n            onClick={() => handleOpenForm('create')}\r\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow text-sm text-white bg-gradient-to-r from-indigo-500 to-blue-400 hover:from-indigo-600 hover:to-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-300 transition\"\r\n          >\r\n            <svg className=\"-ml-1 mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n            </svg>\r\n            Add New Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Only show error on main page if not in modal */}\r\n      {error && !isFormOpen && (\r\n        <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-6\">\r\n          <div className=\"flex\">\r\n            <div className=\"flex-shrink-0\">\r\n              <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n              </svg>\r\n            </div>\r\n            <div className=\"ml-3\">\r\n              <p className=\"text-sm text-red-700\">{error}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\r\n          <span className=\"ml-3 text-lg text-gray-700\">Loading products...</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\r\n          {products.length === 0 ? (\r\n            <div className=\"text-center py-12\">\r\n              <svg\r\n                className=\"mx-auto h-12 w-12 text-gray-400\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 17v-6a2 2 0 012-2h2a2 2 0 012 2v6m-6 0h6\"\r\n                />\r\n              </svg>\r\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No products</h3>\r\n              <p className=\"mt-1 text-sm text-gray-500\">Get started by adding a new product.</p>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <ul className=\"divide-y divide-gray-200\">\r\n                {products.map(product => (\r\n                  <li key={product._id} className=\"py-4 px-6 flex items-center justify-between\">\r\n                    <div>\r\n                      <div className=\"font-semibold text-gray-900\">{product.name}</div>\r\n                      <div className=\"text-sm text-gray-500\">{product.category}</div>\r\n                      <div className=\"text-xs text-gray-400\">{product.productType}</div>\r\n                      <div className=\"text-xs text-gray-400\">₹{product.price}</div>\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                      <button className=\"text-blue-600 hover:text-blue-900\" onClick={() => handleOpenForm('edit', product)}>Edit</button>\r\n                      <button className=\"text-red-600 hover:text-red-900\" onClick={() => handleDeleteProduct(product._id)}>Delete</button>\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              {/* Pagination Controls */}\r\n              <div className=\"flex items-center justify-between px-6 py-4 border-t\">\r\n                <div>\r\n                  <span className=\"text-sm text-gray-700\">\r\n                    Page {page} of {Math.ceil(total / pageSize)} | Total: {total}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                    onClick={() => setPage((p) => Math.max(1, p - 1))}\r\n                    disabled={page === 1}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                  <button\r\n                    className=\"px-3 py-1 rounded bg-gray-200 text-gray-700 hover:bg-gray-300\"\r\n                    onClick={() => setPage((p) => (p < Math.ceil(total / pageSize) ? p + 1 : p))}\r\n                    disabled={page >= Math.ceil(total / pageSize)}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                  <select\r\n                    className=\"ml-2 px-2 py-1 border rounded\"\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                      setPageSize(Number(e.target.value));\r\n                      setPage(1);\r\n                    }}\r\n                  >\r\n                    {[5, 10, 20, 50].map(size => (\r\n                      <option key={size} value={size}>{size} / page</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n      {isFormOpen && (\r\n        <div className=\"fixed inset-0 overflow-y-auto z-50\">\r\n          <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n            <div className=\"inline-block align-bottom bg-white rounded-2xl text-left overflow-hidden shadow-2xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full border border-gray-100\">\r\n              <div className=\"bg-white px-6 pt-6 pb-4 sm:p-8 sm:pb-6\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\">\r\n                    <h3 className=\"text-lg leading-6 font-semibold text-gray-800\">\r\n                      {formMode === 'create' ? 'Add New Product' : 'Edit Product'}\r\n                    </h3>\r\n                    {/* Show error in modal if present */}\r\n                    {error && (\r\n                      <div className=\"bg-red-50 border-l-4 border-red-400 p-3 mb-4 mt-2\">\r\n                        <div className=\"flex\">\r\n                          <div className=\"flex-shrink-0\">\r\n                            <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                            </svg>\r\n                          </div>\r\n                          <div className=\"ml-3\">\r\n                            <p className=\"text-sm text-red-700\">{error}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    <div className=\"mt-2\">\r\n                      <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n                        {/* Product Name */}\r\n                        <div>\r\n                          <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Product Name <span className=\"text-red-400\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            id=\"name\"\r\n                            value={formData.name}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                          />\r\n                        </div>\r\n                        {/* Description */}\r\n                        <div>\r\n                          <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Description <span className=\"text-red-400\">*</span>\r\n                          </label>\r\n                          <textarea\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            rows={3}\r\n                            value={formData.description}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                          />\r\n                        </div>\r\n                        {/* Price and Old Price */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label htmlFor=\"price\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Price (₹) <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              name=\"price\"\r\n                              id=\"price\"\r\n                              min=\"0\"\r\n                              step=\"0.01\"\r\n                              value={formData.price}\r\n                              onChange={handleInputChange}\r\n                              required\r\n                              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <label htmlFor=\"oldPrice\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Old Price (₹) <span className=\"text-gray-400 text-xs\">(Optional)</span>\r\n                            </label>\r\n                            <input\r\n                              type=\"number\"\r\n                              name=\"oldPrice\"\r\n                              id=\"oldPrice\"\r\n                              min=\"0\"\r\n                              step=\"0.01\"\r\n                              value={formData.oldPrice}\r\n                              onChange={handleInputChange}\r\n                              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        {/* Category and Product Type */}\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Category <span className=\"text-red-400\">*</span>\r\n                            </label>\r\n                            <select\r\n                              id=\"category\"\r\n                              name=\"category\"\r\n                              value={formData.category}\r\n                              onChange={handleInputChange}\r\n                              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                              <option value=\"\">Select a category</option>\r\n                              <option value=\"digital\">Digital</option>\r\n                              <option value=\"platform\">Platform</option>\r\n                              <option value=\"enterprise\">Enterprise</option>\r\n                              <option value=\"course\">Course</option>\r\n                              <option value=\"service\">Service</option>\r\n                            </select>\r\n                          </div>\r\n                          <div>\r\n                            <label htmlFor=\"productType\" className=\"block text-sm font-medium text-gray-700\">\r\n                              Product Type\r\n                            </label>\r\n                            <select\r\n                              id=\"productType\"\r\n                              name=\"productType\"\r\n                              value={formData.productType}\r\n                              onChange={handleInputChange}\r\n                              className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                              <option value=\"individual\">Individual</option>\r\n                              <option value=\"enterprise\">Enterprise</option>\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        {/* Badge */}\r\n                        <div>\r\n                          <label htmlFor=\"badge\" className=\"block text-sm font-medium text-gray-700\">\r\n                            Badge <span className=\"text-gray-400 text-xs\">(optional)</span>\r\n                          </label>\r\n                          <select\r\n                            name=\"badge\"\r\n                            id=\"badge\"\r\n                            value={formData.badge}\r\n                            onChange={handleInputChange}\r\n                            className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                          >\r\n                            <option value=\"\">None</option>\r\n                            <option value=\"New\">New</option>\r\n                            <option value=\"Best Seller\">Best Seller</option>\r\n                            <option value=\"Popular\">Popular</option>\r\n                            <option value=\"Premium\">Premium</option>\r\n                            <option value=\"AI-Powered\">AI-Powered</option>\r\n                            <option value=\"Quick Win\">Quick Win</option>\r\n                            <option value=\"Flagship\">Flagship</option>\r\n                            <option value=\"Enterprise\">Enterprise</option>\r\n                            <option value=\"Teams\">Teams</option>\r\n                          </select>\r\n                        </div>\r\n                        {/* Features */}\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Features\r\n                          </label>\r\n                          {formData.features.map((feature, index) => (\r\n                            <div key={index} className=\"flex mb-2\">\r\n                              <input\r\n                                type=\"text\"\r\n                                value={feature}\r\n                                onChange={(e) => handleFeatureChange(index, e.target.value)}\r\n                                placeholder={`Feature ${index + 1}`}\r\n                                className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                              />\r\n                              <button\r\n                                type=\"button\"\r\n                                onClick={() => removeFeature(index)}\r\n                                className=\"ml-2 inline-flex items-center p-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\r\n                              >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                  <path fillRule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\r\n                                </svg>\r\n                              </button>\r\n                            </div>\r\n                          ))}\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={addFeature}\r\n                            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                          >\r\n                            <svg className=\"-ml-0.5 mr-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n                            </svg>\r\n                            Add Feature\r\n                          </button>\r\n                        </div>\r\n                        {/* Featured */}\r\n                        <div className=\"flex items-start\">\r\n                          <div className=\"flex items-center h-5\">\r\n                            <input\r\n                              id=\"featured\"\r\n                              name=\"featured\"\r\n                              type=\"checkbox\"\r\n                              checked={formData.featured}\r\n                              onChange={handleInputChange}\r\n                              className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"ml-3 text-sm\">\r\n                            <label htmlFor=\"featured\" className=\"font-medium text-gray-700\">\r\n                              Featured Product\r\n                            </label>\r\n                            <p className=\"text-gray-500\">Featured products appear at the top of the list.</p>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow px-4 py-2 bg-gradient-to-r from-indigo-500 to-blue-400 text-base font-medium text-white hover:from-indigo-600 hover:to-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-300 sm:ml-3 sm:w-auto sm:text-sm transition\"\r\n                          >\r\n                            {formMode === 'create' ? 'Create Product' : 'Update Product'}\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={handleCloseForm}\r\n                            className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-200 shadow px-4 py-2 bg-white text-base font-medium text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-200 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm transition\"\r\n                          >\r\n                            Cancel\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminProducts;"],"names":["supabaseProvider","uploadFile","supabaseStorage","getFileUrl","async","path","listFiles","data","error","storage","from","process","list","prefix","limit","offset","sortBy","column","order","flatten","items","currentPrefix","files","item","id","push","name","concat","storageService","constructor","provider","this","setProvider","file","ProductFileType","uploadProductFile","productId","uploadAnyFile","url","fileId","originalName","fileType","getFileType","size","uploadDate","Date","toISOString","metadata","thumbnailUrl","undefined","_name$split$pop","includes","OTHER","split","pop","toLowerCase","PDF","VIDEO","PRESENTATION","EXCEL","IMAGE","api","axios","create","baseURL","headers","productsApiWithFiles","getAll","products","params","console","getById","productData","_response$data","response","log","productDataObj","_id","Error","JSON","stringify","length","productFiles","uploadProductFiles","updatedProduct","hasFiles","updateResponse","update","Array","isArray","fileUpdateError","filesToDelete","Promise","all","map","filePath","resolve","existingFiles","_current$data","current","delete","product","get","productFile","put","deleteFile","updatedFiles","filter","getFiles","purchase","success","getDownloadUrl","f","trim","uploadPromises","supabase","createClient","upload","upsert","getPublicUrl","publicUrl","AdminProducts","setProducts","useState","loading","setLoading","setError","selectedProduct","setSelectedProduct","isFormOpen","setIsFormOpen","formMode","setFormMode","page","setPage","pageSize","setPageSize","total","setTotal","formData","setFormData","description","price","oldPrice","image","category","productType","badge","features","featured","isFree","imagePreviews","setImagePreviews","pendingFiles","setPendingFiles","setFilesToDelete","navigate","useNavigate","user","useAuth","useEffect","fetchProducts","_response$data2","totalCount","err","message","handleOpenForm","mode","handleCloseForm","handleInputChange","e","value","type","target","prev","checked","parseFloat","_jsxs","className","children","_jsx","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fillRule","clipRule","_Fragment","window","confirm","toast","handleDeleteProduct","Math","ceil","p","max","disabled","onChange","Number","onSubmit","preventDefault","htmlFor","required","rows","min","step","feature","index","handleFeatureChange","updatedFeatures","placeholder","_","i","removeFeature","addFeature"],"sourceRoot":""}